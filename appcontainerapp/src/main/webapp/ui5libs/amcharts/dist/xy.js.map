{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t * \n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t * \n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t * \n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\t \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t * \n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.* \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tthis.handleWheel(event);\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: event.clientX, y: event.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: IPointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tlet local = this.plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\t\t\tif (local.x == downPoint.x && local.y == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\t\t\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t * \n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t});\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t});\n\n\t\tthis.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target));\n\t\tthis.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target));\n\n\t\tthis.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target));\n\t\tthis.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove(ev.keyCode);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(keyCode: number) {\n\t\tlet dir: any = \"\";\n\t\tlet position = 0;\n\t\tlet increment = 0.1;\n\t\tconst chart = this.chart;\n\n\t\tif (this._root.focused(this.lineX)) {\n\t\t\tif (chart && chart.xAxes.length) {\n\t\t\t\tincrement = chart.xAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionX\", 0);\n\t\t\tdir = \"positionX\";\n\t\t\tif (keyCode == 37) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 39) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\t\telse if (this._root.focused(this.lineY)) {\n\t\t\tif (chart && chart.yAxes.length) {\n\t\t\t\tincrement = chart.yAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionY\", 0);\n\t\t\tdir = \"positionY\";\n\t\t\tif (keyCode == 38) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 40) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) {\n\t\t\tposition = 0;\n\t\t}\n\t\telse if (position > 1) {\n\t\t\tposition = 1;\n\t\t}\n\n\t\tif (dir != \"\") {\n\t\t\tthis.set(dir, position);\n\t\t}\n\t}\n\n\tprotected _handleLineFocus(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\"),\n\t\t\tpositionY: this.getPrivate(\"positionY\"),\n\t\t\talwaysShow: true\n\t\t});\n\t}\n\n\tprotected _handleLineBlur(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tpublic _crispX = 0;\n\tpublic _crispY = 0;\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\t/*\n\t\tconst gridContainer = this.gridContainer;\n\t\tconst topGridContainer = this.topGridContainer;\n\t\tlet global = gridContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tthis._crispX = global.x - Math.round(global.x);\n\t\tthis._crispY = global.y - Math.round(global.y);\n\n\t\tgridContainer.setAll({ dx: this._crispX, dy: this._crispY });\n\t\ttopGridContainer.setAll({ dx: this._crispX, dy: this._crispY });\n\t\t*/\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t * @ignore\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", Math.round(this.positionToCoordinate(position) - this.axis._crispX + 0.5));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position) - this.axis._crispX + 0.5));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif(this.get(\"opposite\")){\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tvar w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", Math.round(this.positionToCoordinate(position)) - this.axis._crispY + 0.5);\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", Math.round(this.positionToCoordinate(position)) - this.axis._crispY + 0.5);\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tvar maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\n\t\t\t\t\tlet endIndex2 = endIndex;\n\t\t\t\t\tif (endIndex2 > 0) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * 1.05);\n\t\t\t\tendValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05)\n\t\tendTime = $time.round(new Date(endTime), baseInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05)\n\t\tendTime = $time.round(new Date(endTime), baseInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstartTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\t\tendTime = startTime + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05);\n\t\t\t\t\tendTime = $time.round(new Date(endTime), baseInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst timeZone = this._root.timezone;\n\t\t\tconst firstDayOfWeek = this._root.locale.firstDayOfWeek;\n\t\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), timeZone).getTime();\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\t\tif (timeZone) {\n\t\t\t\tvalue = $time.round(new Date(value + this.baseDuration() * 0.05), baseInterval.timeUnit, baseInterval.count, firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), timeZone).getTime();\n\t\t\t\tlet newValue = value + duration * location;\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(newValue), firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tlet date = new Date(value);\n\n\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\t\treturn this._root.dateFormatter.format(new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t * @ignore\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.baseDuration() / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tlet len = Math.round(this._dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\t\t\tlet firstDate = new Date();\r\n\t\t\tif (this._dates[0]) {\r\n\t\t\t\tfirstDate = new Date(this._dates[0]);\r\n\t\t\t}\r\n\r\n\t\t\tlet startDate = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone);\r\n\t\t\tlet value = $time.add(startDate, gridInterval.timeUnit, -1, this._root.utc, this._root.timezone).getTime();\r\n\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = this._dates.length; i < len; i++) {\r\n\t\t\t\t\t\tlet realValue = this._dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet previousValue = value;\r\n\t\t\t\tvalue += $time.getDuration(gridInterval.timeUnit, gridInterval.count * 1.05);\r\n\t\t\t\tvalue = $time.round(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\tif (value == previousValue) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet previous = -Infinity;\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif(!this.get(\"tooltipDataItem\")){\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif(tooltip){\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\t\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t * @ignore\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 1 / this.dataItems.length * (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\t\t\t\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","series","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","_removeSeries","wheelX","wheelY","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","newStart","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_wheelDp","handleWheel","dispose","sign","diff","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","undefined","_isPanning","_movePoints","_handlePinch","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","Math","max","sa","ea","downStartY","downEndY","isHidden","isHiding","startIndex","endIndex","dataItem","dataItems","tooltipDataItem","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","hh","plotT","plotB","tooltips","sum","minDistance","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","count","sort","a","b","centerY","top","bottom","min","_fy","reverse","bounds","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","moveThreshold","strokeDasharray","ariaLabel","translate","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","ev","_handleLineFocus","_handleLineBlur","document","_handleLineMove","keyCode","dir","increment","focused","getCellWidthPosition","_line","alwaysShow","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","rootPoint","_inPlot","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","processAxis","ghostLabel","makeLabel","adapters","disable","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","once","_markDirtyKey","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","_bullets","axisRange","_seriesAxisRanges","_updateCursor","_start","_end","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","hideDataItem","showDataItem","tick","bullet","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updateChartLayout","_updatePositions","labels","ticks","axisFills","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","_clearDirty","_sizeDirty","coordinate","_nextItem","_autoGapCount","_fieldName","axisDataItem","Axis","AxisLabel","AxisLabelRadial","template","make","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","_tooltip","markDirty","_clear","AxisRenderer","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToCoordinate","endPosition","_crispX","toggleVisibility","bulletPosition","previousBullet","previousSprite","x0","x1","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","_crispY","y0","y1","AxisRendererY","AxisTick","_setBaseInterval","interval","_baseDuration","baseMainDuration","_fixZoomFactor","groupInterval","_dataGrouped","_groupSeriesData","_handleRangeChange","setDataSet","_seriesDataGrouped","_dataSets","baseAxis","_valueYFields","_valueXFields","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","_intervalMax","_intervalMin","selectionMin","selectionMax","modifiedDifference","baseDuration","getGroupInterval","current","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","gridCount","_strictMode","_intervalDuration","id","intervals","nextGridUnit","previousValue","format","formats","_dataItems","processDataItem","date","dateFormatter","j","inited","_markDirtyAxes","_updateGhost","_deltaMinMax","startTime","endTime","_date","fields","open","close","_updateDates","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemPositionX","getDataItemPositionY","positionToValue","timeZone","NaN","fieldName","result","diValue","first","second","nextItem","value1","zoomToValues","DateAxis","valueFields","dates","_dates","found","len","itemValue","findex","floor","_seriesValuesDirty","_updateAllDates","valueToIndex","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","_frequency","realDuration","startDate","previousPosition","minDifference","realValue","GaplessDateAxis","isPrivateDirty","Grid","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_valuesDirty","_getMinMax","_getSelectionMinMax","_groupData","_prepareAxisItems","_updateAxisRanges","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","_formatText","stepPower","decCount","fillEndPosition","updateGrid","hasTag","updateTick","updateFill","updateBullet","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","fixSmallStep","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","valueToFinalPosition","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","_fixMin","_fixMax","_getDelta","strictMinMaxSelection","strict","_saveMinMax","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","_makeGraphics","legendDataItem","markerRectangle","stroke","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","setting","_getTooltipTarget","_draw","Candlestick","mainContainer","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","getRaw","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","CandlestickSeries","ColumnSeries","strokes","fills","_fillGenerator","p","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","clear","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","marker","interactive","disabledColor","bulletFunction","LineSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","getStackedYValue","processSeriesDataItem","_markStakedDirtyStack","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","markDirtySelectionExtremes","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_mainContainerMask","mask","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","stackedToSeries","_afterDataChange","_aggregatesCalculated","_shouldShowBullet","_positionX","_positionY","_markDataSetDirty","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","_position","resetExtremes","XYSeries","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","_itemMap","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","axisPositionToIndex","seriesDataItem","zoomToIndexes","previousIndex","previousUnitValue","selectedItems","changed","skip","unitValue","added","pop","shouldAdd","item","classNames","concat","CategoryDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","lY","hX","OHLC","List","Template","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","areaEnd","lineStart","_point","lineEnd","closePath","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}