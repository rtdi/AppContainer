{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * @ignore\n\t */\n\totherCharts?: Array<XYChart>\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\t \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t * \n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.* \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.plotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\tplotContainer.children.moveValue(zoomOutButton);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t}\n\n\tprotected _maskGrid(){\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif(cursor){\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif(snapToSeries){\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t})\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t})\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif(chart && $object.keys(chart.plotContainer._downPoints).length > 1){\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\nthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tif (this.get(\"opposite\" as any)) {\n\t\t\tthemeTags.push(\"opposite\");\n\t\t}\n\t\tif (this.get(\"inside\" as any)) {\n\t\t\tthemeTags.push(\"inside\");\n\t\t}\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * @todo review\n\t */\n\tuseLastColorForLegendMarker?: boolean\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(startIndex > 0){\n\t\t\t\t\tstartIndex--\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\n\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", ()=>{\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t\tghostLabel.setPrivate(\"visible\", true);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin;\n\t\t\t}\n\t\t}\n\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.eachContinue(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\n\t\t\t\tif (series._dataSets[dataSetId].length < this.get(\"groupCount\", Infinity)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tconst groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\t\t\tif (groupIntervals) {\n\t\t\t\t\t\tgroupInterval = $time.chooseInterval(0, modifiedDifference, this.get(\"groupCount\", Infinity), groupIntervals);\n\t\t\t\t\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\t\t\t\t\tgroupInterval = { ...baseInterval };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count))) {\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\t\t\t\t\tlet endIndex = end.index;\n\n\t\t\t\t\tlet endIndex2 = endIndex;\n\t\t\t\t\tif (endIndex2 > 0) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime()) //$time.round(new Date(value + intervalDuration * 1.1), gridInterval.timeUnit, gridInterval.count).getTime());\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tdataItem.open = {};\n\t\tdataItem.close = {};\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\tdataItem.close![field] = endTime;\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), this._root.timezone).getTime();\n\t\tlet endValue = value;\n\t\tif (location > 0) {\n\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t}\n\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\n\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\tlet date = new Date(this.positionToValue(position));\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position) + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\r\n\t\t\tlet value = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime() - intervalDuration;\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = -Infinity;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\taxis.ghostLabel.set(\"forceHidden\", this.get(\"inside\"));\n\t\t\n\t\tconst opposite = \"opposite\"\n\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (chart) {\n\t\t\t\tconst axisChildren = axis.children;\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\taxis.removeTag(opposite);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\t\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\t\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\"\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\taxis.addTag(opposite);\t\t\t\t\t\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(\"opposite\");\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\tthumb.set(\"centerX\", p100);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\t\t\t\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\n\t\tthumb.setPrivate(\"width\", axis.labelsContainer.width());\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","moveValue","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","gridContainer","series","xAxis","get","yAxis","cursor","snapToSeries","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","position","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","getPrivate","delta","_getWheelSign","se","_fixWheel","dispose","sign","diff","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","_movePoints","_handlePinch","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","Math","max","sa","ea","downStartY","downEndY","isHidden","isHiding","startIndex","endIndex","dataItem","dataItems","tooltipDataItem","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","plotT","_display","plotB","tooltips","sum","minDistance","_movePoint","maxTooltipDistance","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","count","sort","a","b","centerY","top","bottom","min","_fy","reverse","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","pinchZoomX","pinchZoomY","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","strokeDasharray","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","rootPoint","_inPlot","_getPosition","charAt","userPositionX","userPositionY","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","AxisLabel","AxisLabelRadial","ticks","template","grid","axisFills","labels","tick","make","labelsContainer","label","axisLength","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","downStart","downEnd","extra","_getPan","_point1","_point2","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","AxisRenderer","AxisTick","_beforeChanged","isPrivateDirty","Grid","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","len","inited","_createGraphics","_ph","_pw","baseAxis","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","_toggleColumn","j","_updateGraphics","_skipped","graphics","_makeGraphics","legendDataItem","markerRectangle","stroke","axisRanges","axisRange","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","getDataItemPositionX","getDataItemPositionY","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","_dataItems","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","disposeDataItem","list","promises","hideDataItem","Promise","all","bullets","bullet","showDataItem","lastDataItem","column","setting","_getTooltipTarget","strokes","fills","_fillGenerator","y0","p","x0","y1","x1","mainContainer","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataContext","_valueFields","field","_endIndex","_clearGraphics","_startSegment","clear","segmentIndex","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","nextItem","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","_points","_firstPoint","segment","context","_processAxisRange","_dataItem","marker","disabledColor","bulletFunction","LineSeries","fields","valueFields","_setRawDefault","_removeAxisRange","axisDataItem","_seriesAxisRanges","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xLowField","_xHighField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","_min","_max","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","_dataGrouped","_groupSeriesData","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","outOfSelection","_calculateTotals","markDirtySelectionExtremes","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_mainContainerMask","mask","_markDirtyKey","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","updateLegendMarker","_afterDataChange","_aggregatesCalculated","_clearDirty","_shouldShowBullet","_positionX","_positionY","id","_dataSets","_markDataSetDirty","_dataSetId","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","_afterChanged","_markDirtyAxes","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","positionToCoordinate","_position","resetExtremes","XYSeries","interactive","interactiveChildren","Graphics","_addOrientationClass","orientation","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","Container","List","background","Rectangle","axisHeader","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","once","_markDirty","_series","_createAssets","_rangesDirty","_prepareDataItem","above","_index","_updateCursor","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","Component","Axis","_itemMap","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","f","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateGrid","updateTick","updateFill","updateBullet","NaN","cellLocation","_axisLocation","category","axisPositionToIndex","fieldName","seriesDataItem","zoomToIndexes","classNames","concat","startTime","endTime","realDuration","baseDuration","gridInterval","nextGridUnit","format","formats","previousValue","previousIndex","previousUnitValue","selectedItems","changed","skip","date","unitValue","added","pop","shouldAdd","item","dateFormatter","CategoryDateAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","numberFormat","formatter","getNumberFormatter","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","processDataItem","_formatText","stepPower","decCount","valueToPosition","hasTag","removeTag","positionToValue","gridCount","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","axisLocation","fixSmallStep","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","valueToFinalPosition","minDiff","initialMin","initialMax","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strictMinMaxSelection","strict","animatePrivate","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","_setBaseInterval","interval","_baseDuration","baseMainDuration","_fixZoomFactor","groupInterval","setDataSet","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","firstDate","prevNewDataItem","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_groupingCalculated","modifiedDifference","current","endIndex2","firstDataItem","lastDate","_strictMode","_intervalDuration","intervals","_date","close","_updateDates","openValue","closeValue","result","diValue","first","second","value1","zoomToValues","DateAxis","dates","_dates","found","itemValue","findex","_updateAllDates","valueToIndex","previousPosition","minDifference","realValue","GaplessDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","gridTemplate","axisChildren","point1","point2","_ls","_lc","innerWidth","toggleVisibility","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","AxisRendererY","_draw","RoundedRectangle","Candlestick","Template","ColumnSeries","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","getRaw","_updateCandleGraphics","CandlestickSeries","lY","hX","OHLC","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}