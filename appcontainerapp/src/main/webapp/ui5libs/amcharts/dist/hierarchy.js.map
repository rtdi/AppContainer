{"version":3,"file":"hierarchy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/BreadcrumbBar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyNode.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/iterator.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Hierarchy.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchyNode.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyLink.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchy.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/lcg.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/simulation.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/add.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quad.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quadtree.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/jiggle.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/collide.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/link.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/cover.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/data.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/extent.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/remove.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/root.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/size.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visit.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visitAfter.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/ForceDirected.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/manyBody.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/accessors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/lcg.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/array.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/index.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Pack.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/partition.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Partition.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Sunburst.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/tree.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Tree.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Treemap.ts","webpack://@amcharts/amcharts5/./tmp/webpack/hierarchy.js"],"sourcesContent":["import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class HierarchyDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst gridLayout = this._root.gridLayout;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/hierarchy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Hierarchy\").setAll({\r\n\t\t\tlegendLabelText: \"{category}\",\r\n\t\t\tlegendValueText: \"{sum.formatNumber('#.#')}\",\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tcolors: ColorSet.new(this._root, { step: 2 }),\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\tsingleBranchOnly: true,\r\n\t\t\tmaskContent: true,\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\").setAll({\r\n\t\t\ttoggleKey: \"disabled\",\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttooltipText: \"{category}: {sum}\"\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"last\"]).setAll({\r\n\t\t\tcursorOverStyle: \"default\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"hierarchy\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.3\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"HierarchyLink\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrength: 0.9,\r\n\t\t\t\tdistance: 1.1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tfillOpacity: 1,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tradius: 15,\r\n\t\t\ttooltipY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\topacity: 1,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tstrokeDasharray: 0,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tradius: 15,\r\n\t\t\tscale: 1.1,\r\n\t\t\tinteractive: false\r\n\t\t})\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"disabled\", { opacity: 1, scale: 1.1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hoverDisabled\", { scale: 1.2, opacity: 1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hover\", { scale: 1.05, strokeDasharray: 0 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hidden\", { opacity: 0, strokeDasharray: 0 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: BreadcrumbBar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"BreadcrumbBar\").setAll({\r\n\t\t\tpaddingLeft: 8,\r\n\t\t\tlayout: gridLayout\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}:\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"hover\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\", \"last\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\tcursorOverStyle: \"default\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"breadcrumb\", \"label\", \"background\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Partition\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Partition\").setAll({\r\n\t\t\tdownDepth: 1,\r\n\t\t\tupDepth: 0,\r\n\t\t\tinitialDepth: 5\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 1,\r\n\t\t\tvisible: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"partition\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\trotation: 90,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"Label\", [\"horizontal\", \"partition\", \"node\"]).setAll({\r\n\t\t\trotation: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Sunburst\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sunburst\").setAll({\r\n\t\t\tsingleBranchOnly: true\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 0,\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Slice\", [\"sunburst\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadius: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Slice\", [\"sunburst\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RadialLabel\", [\"sunburst\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\ttextType: \"radial\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4,\r\n\t\t\t\tbaseRadius: p50,\r\n\t\t\t\trotation: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: ForceDirected\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ForceDirected\").setAll({\r\n\t\t\tminRadius: percent(1),\r\n\t\t\tmaxRadius: percent(8),\r\n\t\t\tinitialFrames: 500,\r\n\t\t\tcenterStrength: 0.8,\r\n\t\t\tmanyBodyStrength: -14,\r\n\t\t\tvelocityDecay: 0.5,\r\n\t\t\tlinkWithStrength: 0.5,\r\n\t\t\tshowOnFrame: 10,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Tree\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Tree\").setAll({\r\n\t\t\torientation: \"vertical\",\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Pack\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Pack\").setAll({\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tnodePadding: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"pack\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Circle\", [\"pack\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tfillOpacity: 0.8,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"LinkedHierarchyNode\").setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"LinkedHierarchyNode\").states.create(\"hidden\", { scale: 0, opacity: 0, visible: false });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Treemap\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Treemap\").setAll({\r\n\t\t\tupDepth: 0,\r\n\t\t\tlayoutAlgorithm: \"squarify\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"treemap\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"HierarchyNode\", [\"treemap\", \"node\"]).setAll({\r\n\t\t\ttooltipY: percent(40),\r\n\t\t\tisMeasured: false,\r\n\t\t\tposition: \"absolute\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"treemap\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0,\r\n\t\t\t\tfillOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IBreadcrumbBarSettings extends IContainerSettings {\n\n\t/**\n\t * A hierarchy series bar will use to build current selection path.\n\t */\n\tseries: Hierarchy;\n\n}\n\nexport interface IBreadcrumbBarPrivate extends IContainerPrivate {\n}\n\nexport interface IBreadcrumbBarEvents extends IContainerEvents {\n}\n\n/**\n * Creates a breadcrumb navigation control.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/breadcrumbs/} for more info\n * @important\n */\nexport class BreadcrumbBar extends Container {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IHierarchyDataItem>): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tlabel.states.create(\"hover\", {});\n\t\tlabel.states.create(\"down\", {});\n\t\tlabel.events.on(\"click\", () => {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tif (series) {\n\t\t\t\tseries.selectDataItem(dataItem);\n\t\t\t}\n\t\t});\n\n\t\tthis.labels.push(label);\n\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the bar.\n\t *\n\t * `labels.template` can be used to configure label apperance and behavior.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"label\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: [\"background\"]\n\t\t\t})\n\t\t}, [this.labels.template])\n\t);\n\n\tpublic static className: string = \"BreadcrumbBar\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([BreadcrumbBar.className]);\n\n\tdeclare public _settings: IBreadcrumbBarSettings;\n\tdeclare public _privateSettings: IBreadcrumbBarPrivate;\n\tdeclare public _events: IBreadcrumbBarEvents;\n\n\tprotected _disposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"breadcrumb\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"series\")) {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tconst previous = this._prevSettings.series;\n\t\t\tif (series != previous) {\n\t\t\t\tthis._disposer = series.events.on(\"dataitemselected\", (event) => {\n\t\t\t\t\tthis._handleDataItem(event.dataItem)\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if (previous) {\n\t\t\t\tif (this._disposer) {\n\t\t\t\t\tthis._disposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handleDataItem(series.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _handleDataItem(dataItem: DataItem<IHierarchyDataItem> | undefined) {\n\t\tthis.set(\"minHeight\", this.height());\n\t\tthis.children.clear();\n\t\tthis.labels.clear();\n\n\t\tif (dataItem) {\n\t\t\tlet parent = dataItem;\n\n\t\t\twhile (parent) {\n\t\t\t\tlet label = this.makeLabel(parent);\n\t\t\t\tif (parent == dataItem) {\n\t\t\t\t\tlabel.addTag(\"last\");\n\t\t\t\t}\n\t\t\t\tthis.children.moveValue(label, 0);\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IHierarchyNodeSettings extends IContainerSettings {\n}\n\nexport interface IHierarchyNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for hierarchy nodes.\n */\nexport class HierarchyNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: Hierarchy | undefined;\n\n\tdeclare public _settings: IHierarchyNodeSettings;\n\tdeclare public _privateSettings: IHierarchyNodePrivate;\n\n\tpublic static className: string = \"HierarchyNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IHierarchyDataItem> | undefined;\n\n\tprotected _clickDisposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\n\t\tthis.on(\"disabled\", () => {\n\t\t\tconst dataItem = this.dataItem as DataItem<IHierarchyDataItem>;\n\t\t\tif (!dataItem.get(\"children\")) {\n\t\t\t\tthis.set(\"disabled\", true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst disabled = this.get(\"disabled\");\n\t\t\tconst series = this.series;\n\n\t\t\tif (dataItem && series) {\n\t\t\t\tif (dataItem.get(\"disabled\") != disabled) {\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tseries.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tconst toggleKey = this.get(\"toggleKey\");\n\n\t\t\tif (toggleKey == \"disabled\") {\n\t\t\t\tthis._clickDisposer = this.events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tlet series = this.series;\n\t\t\t\t\t\tif (series) {\n\t\t\t\t\t\t\tseries.selectDataItem(this.dataItem as DataItem<IHierarchyDataItem>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._clickDisposer) {\n\t\t\t\t\tthis._clickDisposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import type { Color } from \"../../core/util/Color\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Root } from \"../../core/Root\";\nimport type { Easing } from \"../../core/util/Ease\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { DataItem } from \"../../core/render/Component\";\nimport { HierarchyNode } from \"./HierarchyNode\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IHierarchyDataObject[],\n\tdataItem?: DataItem<IHierarchyDataItem>\n\tcustomValue?: boolean;\n};\n\nexport interface IHierarchyDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Value of the node as set in data.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Percent value of the node, based on total sum of all nodes in upper level.\n\t */\n\tvaluePercentTotal: number;\n\n\t/**\n\t * Percent value of the node, based on the value of its direct parent.\n\t *\n\t * @since 5.2.21\n\t */\n\tvaluePercent: number;\n\n\t/**\n\t * Sum of child values.\n\t */\n\tsum: number;\n\n\t/**\n\t * Category.\n\t */\n\tcategory: string;\n\n\t/**\n\t * List of child node data items.\n\t */\n\tchildren: Array<DataItem<IHierarchyDataItem>>;\n\n\t/**\n\t * Raw data of the node's children.\n\t */\n\tchildData: Array<any>\n\n\t/**\n\t * Data item of parent node.\n\t */\n\tparent: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Node's depth within the hierarchy.\n\t */\n\tdepth: number;\n\n\t/**\n\t * A reference to the related [[HierarchyNode]].\n\t */\n\tnode: HierarchyNode;\n\n\t/**\n\t * A reference to node's [[Label]].\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node's auto-assigned color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Indicates if node is currently disabled.\n\t */\n\tdisabled: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>;\n\n}\n\nexport interface IHierarchySettings extends ISeriesSettings {\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"none\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n\n\t/**\n\t * A field in data that holds numeric value for the node.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A field in data that holds string-based identificator for node.\n\t */\n\tcategoryField?: string;\n\n\t/**\n\t * A field in data that holds an array of child node data.\n\t */\n\tchildDataField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills for various elements, such\n\t * as nodes.\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Node_colors} for more info\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Number of child levels to open when clicking on a node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tdownDepth?: number;\n\n\t/**\n\t * Number of levels parent levels to show from currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tupDepth?: number;\n\n\t/**\n\t * Number of levels to show on chart's first load.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\tinitialDepth?: number;\n\n\t/**\n\t * If set, will show nodes starting from set level.\n\t *\n\t * It could be used to eliminate top level branches, that do not need to be\n\t * shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\ttopDepth?: number;\n\n\t/**\n\t * If set to `true` will make all other branches collapse when some branch is\n\t * expanded.\n\t */\n\tsingleBranchOnly?: boolean;\n\n\t/**\n\t * A data item for currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Pre_selected_branch} for more info\n\t */\n\tselectedDataItem?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Duration for all drill animations in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for drill animations.\n\t */\n\tanimationEasing?: Easing;\n\n}\n\nexport interface IHierarchyPrivate extends ISeriesPrivate {\n\n\t/**\n\t * Level count in series.\n\t */\n\tmaxDepth: number;\n\n}\n\nexport interface IHierarchyEvents extends ISeriesEvents {\n\tdataitemselected: {\n\t\tdataItem?: DataItem<IHierarchyDataItem>\n\t};\n}\n\n/**\n * A base class for all hierarchy charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\n */\nexport abstract class Hierarchy extends Series {\n\tpublic static className: string = \"Hierarchy\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Hierarchy.className]);\n\n\tdeclare public _settings: IHierarchySettings;\n\tdeclare public _privateSettings: IHierarchyPrivate;\n\tdeclare public _dataItemSettings: IHierarchyDataItem;\n\tdeclare public _events: IHierarchyEvents;\n\n\t/**\n\t * A [[Container]] that nodes are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly nodesContainer = this.children.push(Container.new(this._root, { isMeasured: false }));\n\n\tpublic _rootNode: d3hierarchy.HierarchyNode<IHierarchyDataObject> | undefined;\n\n\tpublic _treeData: IHierarchyDataObject | undefined;\n\n\tprotected _index: number = 0;\n\n\tprotected _tag: string = \"hierarchy\";\n\n\t/**\n\t * A list of nodes in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<HierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyNode.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, this.nodes.template)\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\n\t\tconst childData = dataItem.get(\"childData\");\n\n\t\tconst node = this.nodes.make();\n\t\tnode.series = this;\n\t\tnode._setDataItem(dataItem);\n\t\tthis.nodes.push(node);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\n\t\tif (!childData || childData.length == 0) {\n\t\t\tnode.addTag(\"last\");\n\t\t}\n\n\t\tconst depth = dataItem.get(\"depth\");\n\t\tnode.addTag(\"depth\" + depth);\n\n\t\tthis.nodesContainer.children.push(node);\n\t\tnode.children.push(label);\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, this.labels.template)\n\t);\n\n\tpublic _currentDownDepth: number | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._treeData = {};\n\n\t\t\tconst first = this.dataItems[0];\n\t\t\tif (first) {\n\t\t\t\tthis._makeHierarchyData(this._treeData, first);\n\t\t\t\tthis._index = 0;\n\t\t\t\tthis._rootNode = (d3hierarchy.hierarchy(this._treeData) as any);\n\t\t\t\tif (this._rootNode) {\n\t\t\t\t\tthis._rootNode.sum((d) => {\n\t\t\t\t\t\treturn d.value as any;\n\t\t\t\t\t});\n\t\t\t\t\tconst sort = this.get(\"sort\")\n\t\t\t\t\tif (sort == \"descending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (b.value as any) - (a.value as any));\n\t\t\t\t\t}\n\t\t\t\t\telse if (sort == \"ascending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (a.value as any) - (b.value as any));\n\t\t\t\t\t}\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", -Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"maxDepth\", 0);\n\t\t\t\t\tthis._updateValues(this._rootNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"), this._currentDownDepth, false);\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"selectedDataItem\")) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNodes(hierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\n\t\tif (dataItem) {\n\t\t\tthis._updateNode(dataItem);\n\n\t\t\tif (this.bullets.length > 0 && !dataItem.bullets) {\n\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateNode(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tpublic _getDataItemById(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>, id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\n\t\tlet di: DataItem<this[\"_dataItemSettings\"]> | undefined;\n\n\t\t$array.each(dataItems, (dataItem: any) => {\n\n\t\t\tif (dataItem.get(\"id\") == id) {\n\t\t\t\tdi = dataItem;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tlet childDataItem = this._getDataItemById(children, id);\n\t\t\t\tif (childDataItem) {\n\t\t\t\t\tdi = childDataItem\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn di;\n\t}\n\n\tprotected _handleBullets(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children) {\n\t\t\t\tthis._handleBullets(children);\n\t\t\t}\n\t\t})\n\n\t\tthis._updateVisuals();\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst childData = dataItem.get(\"childData\");\n\t\tconst colors = this.get(\"colors\");\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tif (!dataItem.get(\"parent\")) {\n\t\t\tdataItem.setRaw(\"depth\", 0);\n\t\t\tif (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\t\tconst initialDepth = this.get(\"initialDepth\", 1);\n\n\t\tthis.makeNode(dataItem);\n\t\tthis._processDataItem(dataItem);\n\n\t\tif (childData) {\n\t\t\tconst children: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t\tdataItem.setRaw(\"children\", children);\n\n\t\t\t$array.each(childData, (child) => {\n\t\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\t\tchildren.push(childDataItem);\n\n\t\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\t\tif (this.dataItems.length == 1 && depth == 0) {\n\t\t\t\t\tif (colors && childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", colors.next());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tthis.processDataItem(childDataItem);\n\t\t\t})\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (!children || children.length == 0) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tnode.setAll({ toggleKey: undefined });\n\t\t}\n\n\t\tif (dataItem.get(\"disabled\") == null) {\n\t\t\tif (depth >= topDepth + initialDepth) {\n\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = d3HierarchyNode.data.dataItem;\n\n\t\tif (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\n\t\t\tthis.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tdataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\n\n\t\t\t(d3HierarchyNode as any).index = this._index;\n\n\t\t\tthis._index++;\n\n\t\t\tdataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\n\n\t\t\tlet dataValue = d3HierarchyNode.data.value;\n\t\t\tlet value = d3HierarchyNode.value\n\n\t\t\tif (dataValue != null) {\n\t\t\t\tvalue = dataValue;\n\t\t\t\t(d3HierarchyNode as any)[\"value\"] = value;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdataItem.setRaw(\"sum\", value);\n\t\t\t\tdataItem.setRaw(\"valuePercentTotal\", value / this.dataItems[0].get(\"sum\") * 100);\n\n\t\t\t\tlet valuePercent = 100;\n\t\t\t\tconst parent = dataItem.get(\"parent\");\n\t\t\t\tif (parent) {\n\t\t\t\t\tvaluePercent = value / parent.get(\"sum\") * 100;\n\t\t\t\t}\n\t\t\t\tdataItem.get(\"label\").text.markDirtyText();\n\t\t\t\tdataItem.setRaw(\"valuePercent\", valuePercent);\n\n\t\t\t\tif (this.getPrivate(\"valueLow\") > value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", value);\n\t\t\t\t}\n\n\t\t\t\tif (this.getPrivate(\"valueHigh\") < value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst hierarchyChildren = d3HierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (d3HierarchyChild) => {\n\t\t\t\tthis._updateValues(d3HierarchyChild);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _makeHierarchyData(data: IHierarchyDataObject, dataItem: DataItem<IHierarchyDataItem>) {\n\t\tdata.dataItem = dataItem;\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tconst childrenDataArray: Array<IHierarchyDataObject> = [];\n\t\t\tdata.children = childrenDataArray;\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tconst childData = {};\n\t\t\t\tchildrenDataArray.push(childData);\n\t\t\t\tthis._makeHierarchyData(childData, childDataItem);\n\t\t\t})\n\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disposeDataItem(child);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tconst stateAnimationDuration = \"stateAnimationDuration\"\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.hide();\n\t\tnode.hideTooltip();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.hideDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.show();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.showDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Enables a disabled data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth?: number, depth?: number, duration?: number) {\n\n\t\tif (depth == null) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\tif (maxDepth == null) {\n\t\t\tmaxDepth = 1;\n\t\t}\n\n\t\tdataItem.set(\"disabled\", false);\n\t\tdataItem.get(\"node\").set(\"disabled\", false);\n\n\t\tif (!dataItem.isHidden()) {\n\t\t\tdataItem.get(\"node\").show(duration);\n\t\t}\n\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\t\tif (dataItem.get(\"depth\") < topDepth) {\n\t\t\tdataItem.get(\"node\").hide(0);\n\t\t}\n\n\t\tif (depth == 0) {\n\t\t\tconst upDepth = this.get(\"upDepth\", Infinity);\n\t\t\tlet parent = dataItem;\n\t\t\tlet count = 0;\n\n\t\t\twhile (parent !== undefined) {\n\t\t\t\tif (count > upDepth) {\n\t\t\t\t\tparent.get(\"node\").hide();\n\t\t\t\t}\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tif (depth < maxDepth - 1) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (!child.isHidden()) {\n\t\t\t\t\t\tchild.get(\"node\").show(duration);\n\t\t\t\t\t\tchild.get(\"node\").states.applyAnimate(\"disabled\");\n\t\t\t\t\t\tchild.set(\"disabled\", true);\n\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disables a data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number) {\n\t\tdataItem.set(\"disabled\", true);\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disableDataItem(child, duration);\n\t\t\t\tchild.get(\"node\").hide(duration);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number, skipDisptach?: boolean) {\n\t\tif (dataItem) {\n\t\t\tif (!skipDisptach) {\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\n\t\t\t}\n\n\t\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\t\tif (downDepth == null) {\n\t\t\t\tdownDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\t\t\t}\n\n\t\t\tif (!this.inited) {\n\t\t\t\tdownDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\t\t\t}\n\n\t\t\tthis._currentDownDepth = downDepth;\n\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (currentDepth + downDepth > maxDepth) {\n\t\t\t\tdownDepth = maxDepth - currentDepth;\n\t\t\t}\n\n\t\t\tif (currentDepth < topDepth) {\n\t\t\t\tdownDepth += topDepth - currentDepth;\n\t\t\t\tcurrentDepth = topDepth;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tif (downDepth > 0) {\n\t\t\t\t\tthis.enableDataItem(dataItem, downDepth);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem.get(\"node\").show();\n\t\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (hierarchyNode.depth < topDepth) {\n\t\t\t\t\tdataItem.get(\"node\").hide(0);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"singleBranchOnly\")) {\n\t\t\t\t\tthis._handleSingle(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.enableDataItem(this.dataItems[0], downDepth, 0);\n\t\t\t}\n\n\t\t\tthis._zoom(dataItem);\n\t\t}\n\n\t}\n\n\tprotected _zoom(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Selects specific data item.\n\t *\n\t * @param  dataItem  Target data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\n\t\tif (this.get(\"selectedDataItem\") == dataItem) {\n\t\t\tif (parent) {\n\t\t\t\tthis.set(\"selectedDataItem\", parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\n\t\t\t\tif (this._currentDownDepth == depth) {\n\t\t\t\t\tdepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\n\t\t\t\t}\n\n\t\t\t\tthis._selectDataItem(dataItem, depth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t}\n\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tif (sprite) {\n\t\t\t\tnode.children.push(sprite);\n\t\t\t\tnode.on(\"width\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t\tnode.on(\"height\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tsprite.set(\"x\", node.width() * locationX);\n\t\t\tsprite.set(\"y\", node.height() * locationY);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic hoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node && !node.isHidden()) {\n\t\t\tnode.hover();\n\t\t}\n\t}\n\n\t/**\n\t * Triggers un-hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic unhoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tnode.unhover();\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { LinkedHierarchy, ILinkedHierarchyDataItem } from \"./LinkedHierarchy\";\n\nimport { HierarchyNode, IHierarchyNodePrivate, IHierarchyNodeSettings } from \"./HierarchyNode\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ILinkedHierarchyNodeSettings extends IHierarchyNodeSettings {\n}\n\nexport interface ILinkedHierarchyNodePrivate extends IHierarchyNodePrivate {\n}\n\n/**\n * A node class for [[LinkedHierarchy]].\n */\nexport class LinkedHierarchyNode extends HierarchyNode {\n\n\t/**\n\t * A series node belongs to.\n\t */\n\tdeclare public series: LinkedHierarchy | undefined;\n\n\tdeclare public _settings: ILinkedHierarchyNodeSettings;\n\tdeclare public _privateSettings: ILinkedHierarchyNodePrivate;\n\n\tpublic static className: string = \"LinkedHierarchyNode\";\n\tpublic static classNames: Array<string> = HierarchyNode.classNames.concat([LinkedHierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<ILinkedHierarchyDataItem> | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\t}\n\n\n\tpublic _updateLinks(duration?: number) {\n\t\tconst dataItem = this.dataItem;\n\t\tif (dataItem) {\n\t\t\tlet links = (dataItem as DataItem<ILinkedHierarchyDataItem>).get(\"links\");\n\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tlet source = link.get(\"source\")\n\t\t\t\tlet target = link.get(\"target\")\n\n\t\t\t\tif (source && target) {\n\t\t\t\t\tif (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\n\t\t\t\t\t\tlink.hide(duration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlink.show(duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"disabled\")) {\n\t\t\tthis._updateLinks();\n\t\t}\n\t}\n\n\tprotected _onHide(duration?: number) {\n\t\tsuper._onHide(duration);\n\t\tthis._updateLinks(duration);\n\t}\n\n\tprotected _onShow(duration?: number) {\n\t\tsuper._onShow(duration);\n\t\tthis._updateLinks(duration);\n\t}\n}\n","import type { IHierarchyDataItem } from \"./Hierarchy\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\n\nexport interface IHierarchyLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Strength of the link.\n\t */\n\tstrength?: number;\n\n\t/**\n\t * Distance in pixels.\n\t */\n\tdistance?: number;\n\n}\n\nexport interface IHierarchyLinkPrivate extends IGraphicsPrivate {\n\td3Link:any;\n}\n\n/**\n * Draws a link between nodes in a hierarchy series.\n */\nexport class HierarchyLink extends Graphics {\n\tdeclare public _settings: IHierarchyLinkSettings;\n\tdeclare public _privateSettings: IHierarchyLinkPrivate;\n\n\tpublic static className: string = \"HierarchyLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([HierarchyLink.className]);\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this._clear) {\n\t\t\tlet source = this.get(\"source\");\n\t\t\tlet target = this.get(\"target\");\n\t\t\tif (source && target) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._display.moveTo(sourceNode.x(), sourceNode.y());\n\t\t\t\tthis._display.lineTo(targetNode.x(), targetNode.y());\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tsourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\ttargetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type * as d3hierarchy from \"d3-hierarchy\";\n\nimport { Hierarchy, IHierarchySettings, IHierarchyDataItem, IHierarchyPrivate, IHierarchyEvents } from \"./Hierarchy\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport { HierarchyLink } from \"./HierarchyLink\";\nimport { Template } from \"../../core/util/Template\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface ILinkedHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ILinkedHierarchyDataObject[],\n\tdataItem?: DataItem<ILinkedHierarchyDataItem>\n};\n\nexport interface ILinkedHierarchyDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of child data items.\n\t */\n\tchildren: Array<DataItem<ILinkedHierarchyDataItem>>;\n\n\t/**\n\t * A data item of a parent node.\n\t */\n\tparent: DataItem<ILinkedHierarchyDataItem>;\n\n\t/**\n\t * A related node.\n\t */\n\tnode: LinkedHierarchyNode;\n\n\t/**\n\t * [[Circle]] element of the related node.\n\t */\n\tcircle: Circle;\n\n\t/**\n\t * [[Circle]] element of the related node, representing outer circle.\n\t */\n\touterCircle: Circle;\n\n\t/**\n\t * A [[HierarchyLink]] leading to parent node.\n\t */\n\tparentLink: HierarchyLink;\n\n\t/**\n\t * An [[HierarchyLink]] leading to parent node.\n\t */\n\tlinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of [[HierarchyLink]] objects leading to child nodes.\n\t */\n\tchildLinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of IDs of directly linked nodes.\n\t */\n\tlinkWith: Array<string>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyPointNode<ILinkedHierarchyDataObject>;\n\n}\n\nexport interface ILinkedHierarchySettings extends IHierarchySettings {\n\n\t/**\n\t * A field in data which holds IDs of nodes to link with.\n\t */\n\tlinkWithField?: string;\n\n}\n\nexport interface ILinkedHierarchyPrivate extends IHierarchyPrivate {\n}\n\nexport interface ILinkedHierarchyEvents extends IHierarchyEvents {\n}\n\n/**\n * A base class for linked hierarchy series.\n */\nexport abstract class LinkedHierarchy extends Hierarchy {\n\n\tpublic static className: string = \"LinkedHierarchy\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([LinkedHierarchy.className]);\n\n\tdeclare public _settings: ILinkedHierarchySettings;\n\tdeclare public _privateSettings: ILinkedHierarchyPrivate;\n\tdeclare public _dataItemSettings: ILinkedHierarchyDataItem;\n\tdeclare public _events: ILinkedHierarchyEvents;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"linkWith\", \"x\", \"y\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A list of nodes in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<LinkedHierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<LinkedHierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => LinkedHierarchyNode._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\n\t\t\tx: this.width() / 2,\n\t\t\ty: this.height() / 2\n\t\t}, [this.nodes.template])\n\t);\n\n\t/**\n\t * A list of node circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\t/**\n\t * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly outerCircles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"outer\", \"shape\"])\n\t\t}, [this.outerCircles.template])\n\t);\n\n\t/**\n\t * A list of link elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyLink>\n\t */\n\tpublic readonly links: ListTemplate<HierarchyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyLink._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\n\t\t}, [this.links.template])\n\t);\n\n\t/**\n\t * A [[Container]] that link elements are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.moveValue(Container.new(this._root, {}), 0);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): LinkedHierarchyNode {\n\t\tconst node = super.makeNode(dataItem) as LinkedHierarchyNode;\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tthis.circles.push(circle);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\n\t\tthis.outerCircles.push(outerCircle);\n\t\tdataItem.setRaw(\"outerCircle\", outerCircle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d })\n\t\t\touterCircle.set(\"radius\", d / 2);\n\n\t\t\tthis._handleRadiusChange();\n\t\t})\n\n\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t\n\t\tcircle._setDataItem(dataItem);\n\t\touterCircle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _handleRadiusChange() {\n\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"childLinks\", []);\n\t\tdataItem.setRaw(\"links\", []);\n\t\tsuper.processDataItem(dataItem);\n\t}\n\n\tprotected _processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._processDataItem(dataItem);\n\n\t\tconst parentDataItem = dataItem.get(\"parent\");\n\t\tif (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\n\t\t\tconst link = this.linkDataItems(parentDataItem, dataItem);\n\t\t\tdataItem.setRaw(\"parentLink\", link);\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tthis.updateLinkWith(this.dataItems);\n\t\tnode._updateLinks(0);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t}\n\n\tprotected _animatePositions(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst point = this._getPoint(hierarchyNode);\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\n\t\tnode.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\t\t\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tthis._animatePositions(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t})\n\t\t}\n\n\t\tconst fill = dataItem.get(\"fill\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst children = dataItem.get(\"children\");\n\t\t\n\t\tif (circle) {\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\n\t\tconst outerCircle = dataItem.get(\"outerCircle\");\n\t\tif (outerCircle) {\n\t\t\touterCircle._setDefault(\"fill\", fill);\n\t\t\touterCircle._setDefault(\"stroke\", fill);\n\n\t\t\tif (!children || children.length == 0) {\n\t\t\t\touterCircle.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Link two data items with a link element.\n\t *\n\t * @param   source    Source node data item\n\t * @param   target    Target node data item\n\t * @param   strength  Link strength\n\t * @return            Link element\n\t */\n\tpublic linkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>, strength?: number): HierarchyLink {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!link) {\n\t\t\tlink = this.links.make();\n\t\t\tthis.links.push(link);\n\t\t\tthis.linksContainer.children.push(link);\n\t\t\tlink.set(\"source\", source);\n\t\t\tlink.set(\"target\", target);\n\t\t\tlink._setDataItem(source);\n\t\t\tlink.set(\"stroke\", source.get(\"fill\"));\n\t\t\tif (strength != null) {\n\t\t\t\tlink.set(\"strength\", strength)\n\t\t\t}\n\n\t\t\tsource.get(\"childLinks\").push(link);\n\n\t\t\t$array.move(source.get(\"links\"), link);\n\t\t\t$array.move(target.get(\"links\"), link);\n\n\t\t\tthis._processLink(link, source, target);\n\t\t}\n\n\t\treturn link;\n\t}\n\n\n\t/**\n\t * Unlink two linked data items.\n\t *\n\t * @param   source  Source node data item\n\t * @param   target  Target node data item\n\t */\n\tpublic unlinkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(sourceLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(targetLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (link) {\n\t\t\tthis._disposeLink(link);\n\t\t}\n\n\t\tthis._handleUnlink();\n\t}\n\n\tprotected _handleUnlink() {\n\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tthis.links.removeValue(link);\n\t\tlink.dispose();\n\t}\n\n\t/**\n\t * Returns `true` if two nodes are linked with each other.\n\t */\n\tpublic areLinked(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tconst sourceLinks = source.get(\"links\");\n\t\tlet linked = false;\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn linked;\n\t}\n\n\tprotected _processLink(_link: HierarchyLink, _source: DataItem<this[\"_dataItemSettings\"]>, _target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst links = dataItem.get(\"links\");\n\t\tif (links) {\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tthis._disposeLink(link)\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Select a data item.\n\t * @param  dataItem  Data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\n\t\tif (!dataItem.get(\"disabled\")) {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t\telse {\n\t\t\tif (parent) {\n\t\t\t\tthis.setRaw(\"selectedDataItem\", parent);\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: parent });\n\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t}\n\t\t}\n\t}\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport type { HierarchyLink } from \"./HierarchyLink\";\nimport type * as d3Hierarchy from \"d3-hierarchy\";\n\nimport { LinkedHierarchy, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyPrivate, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as d3Force from \"d3-force\";\n\n/**\n * @ignore\n */\nexport interface IForceDirectedDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IForceDirectedDataObject[],\n\tdataItem?: DataItem<IForceDirectedDataItem>\n};\n\nexport interface IForceDirectedDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IForceDirectedDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<IForceDirectedDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3ForceNode: d3Force.SimulationNodeDatum;\n\n\t/**\n\t * X coordinate.\n\t */\n\tx: number | undefined;\n\n\t/**\n\t * Y coordinate.\n\t */\n\ty: number | undefined;\n}\n\nexport interface IForceDirectedSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Minimum gap in pixels between the nodes.\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to the center of the\n\t * chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tcenterStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to each other.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default -15\n\t */\n\tmanyBodyStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) nodes that are linked together\n\t * via `linkWithField`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tlinkWithStrength?: number | undefined;\n\n\t/**\n\t * Resistance acting agains node speed.\n\t *\n\t * The greater the value, the more \"sluggish\" the nodes will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tvelocityDecay?: number;\n\n\t/**\n\t * Length of how long initial force simulation would run in frames.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 500\n\t */\n\tinitialFrames?: number;\n\n\t/**\n\t * If set to a number will wait X number of frames before revealing\n\t * the tree.\n\t *\n\t * Can be used to hide initial animations where nodes settle into their\n\t * places.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 10\n\t */\n\tshowOnFrame?: number;\n\n\t/**\n\t * Smallest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 1%\n\t */\n\tminRadius?: number | Percent;\n\n\t/**\n\t * Biggest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 8%\n\t */\n\tmaxRadius?: number | Percent;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\txField?: string;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\tyField?: string;\n\n}\n\nexport interface IForceDirectedPrivate extends ILinkedHierarchyPrivate {\n}\n\nexport interface IForceDirectedEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Creates a force-directed tree.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\n * @important\n */\nexport class ForceDirected extends LinkedHierarchy {\n\n\tprotected _tag: string = \"forcedirected\";\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly d3forceSimulation: d3Force.Simulation<{}, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceSimulation();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly collisionForce: d3Force.ForceCollide<d3Force.SimulationNodeDatum> = d3Force.forceCollide(20);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkForce: d3Force.ForceLink<d3Force.SimulationNodeDatum, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceLink();\n\n\tpublic static className: string = \"ForceDirected\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([ForceDirected.className]);\n\n\tdeclare public _settings: IForceDirectedSettings;\n\tdeclare public _privateSettings: IForceDirectedPrivate;\n\tdeclare public _dataItemSettings: IForceDirectedDataItem;\n\tdeclare public _events: IForceDirectedEvents;\n\n\tprotected _nodes: Array<any> = [];\n\tprotected _links: Array<any> = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.d3forceSimulation.on(\"tick\", () => {\n\t\t\tthis._tick++;\n\t\t\tthis.updateNodePositions();\n\t\t});\n\t}\n\n\tprotected _tick: number = 0;\n\tprotected _nodesDirty: boolean = false;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tif (this.isDirty(\"showOnFrame\")) {\n\t\t\tconst showOnFrame = this.get(\"showOnFrame\");\n\t\t\tif (showOnFrame > this._tick) {\n\t\t\t\tthis.nodesContainer.setPrivate(\"visible\", false);\n\t\t\t\tthis.linksContainer.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this.isDirty(\"velocityDecay\")) {\n\t\t\td3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\n\t\t}\n\n\t\tif (this.isDirty(\"initialFrames\")) {\n\t\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic restartSimulation(alpha: number): void {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\tif (d3forceSimulation.alpha() < alpha) {\n\t\t\td3forceSimulation.alpha(alpha);\n\t\t\td3forceSimulation.restart();\n\t\t}\n\t}\n\n\tpublic _handleRadiusChange() {\n\t\tthis._updateForces();\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3ForceNode: any = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\n\t\tconst index = this._nodes.push(d3ForceNode) - 1;\n\t\td3ForceNode.index = index;\n\n\t\tthis.d3forceSimulation.nodes(this._nodes);\n\n\t\tdataItem.set(\"d3ForceNode\", d3ForceNode);\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.set(\"x\", -10000);\n\t\tnode.on(\"scale\", () => {\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\td3ForceNode.fx = node.x();\n\t\t\td3ForceNode.fy = node.y();\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragstop\", () => {\n\t\t\tif (dataItem.get(\"x\") == null) {\n\t\t\t\td3ForceNode.fx = undefined;\n\t\t\t}\n\t\t\tif (dataItem.get(\"y\") == null) {\n\t\t\t\td3ForceNode.fy = undefined;\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3Hierarchy.HierarchyNode<IForceDirectedDataObject>) {\n\t\tsuper._updateValues(d3HierarchyNode);\n\n\t\tthis._nodesDirty = true;\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"collision\", this.collisionForce);\n\t\td3forceSimulation.nodes(this._nodes);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\td3forceSimulation.force(\"link\", this.linkForce);\n\t}\n\n\tprotected _updateVisuals() {\n\t\tsuper._updateVisuals();\n\t\tthis.restartSimulation(1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this._sizeDirty) {\n\t\t\tlet w = Math.max(50, this.innerWidth());\n\t\t\tlet h = Math.max(50, this.innerHeight());\n\t\t\tlet pt = this.get(\"paddingTop\", 0);\n\t\t\tlet pl = this.get(\"paddingLeft\", 0);\n\n\t\t\tlet centerStrength = this.get(\"centerStrength\", 1);\n\n\t\t\td3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\n\t\t\td3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\n\t\t}\n\n\t\tif (this._nodesDirty) {\n\t\t\tthis._updateForces();\n\t\t}\n\t}\n\n\tpublic _updateForces() {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet manyBodyStrength = this.get(\"manyBodyStrength\", -15);\n\n\t\t\tif(circle){\n\t\t\t\treturn circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}));\n\n\t\tthis.collisionForce.radius((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet outerCircle = dataItem.get(\"outerCircle\");\n\t\t\tif(circle && outerCircle){\n\t\t\t\tlet radius = circle.get(\"radius\", 1);\n\n\t\t\t\tif (!outerCircle.isHidden()) {\n\t\t\t\t\tradius = radius * outerCircle.get(\"scale\", 1.1);\n\t\t\t\t}\n\n\t\t\t\tradius *= node.get(\"scale\", 1);\n\n\t\t\t\treturn radius + this.get(\"nodePadding\", 0);\n\t\t\t}\n\t\t})\n\n\t\tthis.restartSimulation(1);\n\t}\n\n\tprotected _animatePositions(_dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\t// void, do not remove\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._nodesDirty = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateNodePositions() {\n\t\tconst linkForce = this.linkForce;\n\t\tif (linkForce) {\n\t\t\tlinkForce.distance((linkDatum) => {\n\t\t\t\treturn this.getDistance(linkDatum)\n\t\t\t});\n\t\t\tlinkForce.strength((linkDatum) => {\n\t\t\t\treturn this.getStrength(linkDatum)\n\t\t\t});\n\t\t}\n\t\tif (this._tick == this.get(\"showOnFrame\")) {\n\t\t\tthis.nodesContainer.setPrivate(\"visible\", true);\n\t\t\tthis.linksContainer.setPrivate(\"visible\", true);\n\t\t}\n\n\t\tlet d3Nodes = this.d3forceSimulation.nodes();\n\n\t\t$array.each(d3Nodes, (d3Node: any) => {\n\t\t\tconst dataItem = d3Node.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tnode.set(\"x\", d3Node.x);\n\t\t\tnode.set(\"y\", d3Node.y);\n\t\t})\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getDistance(linkDatum: any) {\n\t\tlet sourceDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.sourceDataItem;\n\t\tlet targetDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.targetDataItem;\n\n\t\tlet distance = 0;\n\n\t\tif (sourceDataItem && targetDataItem) {\n\n\t\t\tconst targetNode = targetDataItem.get(\"node\");\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet link = linkDatum.link;\n\t\t\tif (link) {\n\t\t\t\tdistance = link.get(\"distance\", 1);\n\t\t\t}\n\n\t\t\tconst sourceNode = sourceDataItem.get(\"node\");\n\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\tdistance = 1;\n\t\t\t}\n\n\t\t\treturn (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\n\t\t}\n\t\treturn distance;\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo description\n\t */\n\tprotected getStrength(linkDatum: any) {\n\t\tlet strength = 0;\n\n\t\tlet link = linkDatum.link;\n\t\tif (link) {\n\t\t\tstrength = link.get(\"strength\", 1);\n\t\t}\n\n\t\tconst targetDataItem = linkDatum.targetDataItem;\n\t\tstrength *= targetDataItem.get(\"node\").get(\"scale\");\n\n\t\treturn strength;\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\t\tthis._updateRadius(dataItem);\n\n\t\tconst x = dataItem.get(\"x\");\n\t\tconst y = dataItem.get(\"y\");\n\n\t\tconst d3Node = dataItem.get(\"d3ForceNode\");\n\n\t\tif (x != null) {\n\t\t\t(d3Node as any).fx = $utils.relativeToValue(x, this.innerWidth());\n\t\t}\n\t\telse{\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\n\t\tif (y != null) {\n\t\t\t(d3Node as any).fy = $utils.relativeToValue(y, this.innerHeight());\n\t\t}\n\t\telse{\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\t}\n\n\tprotected _updateRadius(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet size = (this.innerWidth() + this.innerHeight()) / 2;\n\n\t\tlet minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\n\t\tlet maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\n\n\t\tlet valueWorking = dataItem.get(\"sum\");\n\n\t\tlet radius = maxRadius;\n\n\t\tconst min = this.getPrivate(\"valueLow\", 0);\n\t\tconst max = this.getPrivate(\"valueHigh\", 0);\n\n\t\tif (max > 0) {\n\t\t\tradius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\n\t\t}\n\n\t\tif (!$type.isNumber(radius)) {\n\t\t\tradius = minRadius;\n\t\t}\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tdataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\n\t}\n\n\tprotected _processLink(link: HierarchyLink, source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\n\t\tthis._links.push(d3Link);\n\t\tlink.setPrivate(\"d3Link\", d3Link);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\tthis.d3forceSimulation.force(\"link\", this.linkForce);\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tsuper._disposeLink(link);\n\t\t$array.remove(this._links, link.getPrivate(\"d3Link\"));\n\t}\n\n\tprotected _handleUnlink() {\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _onDataClear() {\n\t\t\t\t\n\t\tsuper._onDataClear();\n\n\t\tthis._nodes = [];\n\t\tthis._links = [];\n\t}\t\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyEvents } from \"./Hierarchy\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface IPackDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPackDataObject[],\n\tdataItem?: DataItem<IPackDataItem>\n};\n\nexport interface IPackDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of data items of node's children.\n\t */\n\tchildren: Array<DataItem<IPackDataItem>>;\n\n\t/**\n\t * A data item of node's parent.\n\t */\n\tparent: DataItem<IPackDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>;\n\n\t/**\n\t * A [[Circle]] element of the node.\n\t */\n\tcircle: Circle;\n\n}\n\nexport interface IPackSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes, in pixels.\n\t *\n\t * @since 5.2.6\n\t */\n\tnodePadding?:number\n\n}\n\nexport interface IPackPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tscaleR?: number;\n\n}\n\nexport interface IPackEvents extends IHierarchyEvents {\n}\n\n/**\n * Builds a pack diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Pack extends Hierarchy {\n\n\tdeclare public _settings: IPackSettings;\n\tdeclare public _privateSettings: IPackPrivate;\n\tdeclare public _dataItemSettings: IPackDataItem;\n\n\tprotected _tag: string = \"pack\";\n\n\tpublic static className: string = \"Pack\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Pack.className]);\n\n\tpublic _packLayout = d3hierarchy.pack();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<IPackDataObject> | undefined;\n\tpublic _packData: IPackDataObject | undefined;\n\n\t/**\n\t * A list of node circle elements in a [[Pack]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleR\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"scaleR\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst packLayout = this._packLayout;\n\t\t\tpackLayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\tpackLayout(this._rootNode);\n\t\t\tpackLayout.padding(this.get(\"nodePadding\", 0));\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\tconst x = hierarchyNode.x * scaleR;\n\t\tconst y = hierarchyNode.y * scaleR;\n\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y, duration: duration, easing: easing })\n\n\t\tif (circle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tcircle.animate({ key: \"radius\", to: radius, duration: duration, easing: easing })\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst circle = dataItem.get(\"circle\");\n\n\t\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\t\tconst x = hierarchyNode.x * scaleR;\n\t\t\tconst y = hierarchyNode.y * scaleR;\n\t\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\t\tnode.setAll({ x: x, y: y })\n\t\t\tcircle.set(\"radius\", radius);\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tthis.circles.push(circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet x = hierarchyNode.x;\n\t\tlet y = hierarchyNode.y;\n\t\tlet r = hierarchyNode.r;\n\n\t\tlet scaleR = Math.min(this.innerWidth(), this.innerHeight()) / (r * 2);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleR\", to: scaleR, duration: duration, easing: easing });\n\n\t\tconst nodesContainer = this.nodesContainer;\n\t\tnodesContainer.animate({ key: \"x\", from: nodesContainer.x(), to: this.width() / 2 - x * scaleR, duration: duration, easing: easing });\n\t\tnodesContainer.animate({ key: \"y\", from: nodesContainer.y(), to: this.height() / 2 - y * scaleR, duration: duration, easing: easing });\n\t}\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IPartitionDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPartitionDataObject[],\n\tdataItem?: DataItem<IPartitionDataItem>\n};\n\nexport interface IPartitionDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IPartitionDataItem>>;\n\n\t/**\n\t * Data it of a parent node.\n\t */\n\tparent: DataItem<IPartitionDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\n\t/**\n\t * A [[RoundedRectangle]] element of a node.\n\t */\n\trectangle: RoundedRectangle;\n\n}\n\nexport interface IPartitionSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes in pixels.\n\t *\n\t * @default 0\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IPartitionPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Partition series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/partition/} for more info\n */\nexport class Partition extends Hierarchy {\n\n\tdeclare public _settings: IPartitionSettings;\n\tdeclare public _privateSettings: IPartitionPrivate;\n\tdeclare public _dataItemSettings: IPartitionDataItem;\n\n\tprotected _tag: string = \"partition\";\n\n\tpublic static className: string = \"Partition\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Partition.className]);\n\n\t/**\n\t * A list of node rectangle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject> | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"partition\", this._settings.orientation || \"vertical\"]);\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"nodePadding\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t[w, h] = [h, w];\n\t\t\t}\n\n\t\t\tpartitionLayout.size([w, h]);\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tlet x0, x1, y0, y1: number;\n\n\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t}\n\t\telse {\n\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t}\n\t\tlet w = x1 - x0;\n\t\tlet h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\t\t\t\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\t\t\t\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tlet x0, x1, y0, y1: number;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t\t}\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\t\tthis._makeNode(dataItem, node);\n\t\treturn node;\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\t\trectangle._setDataItem(dataItem);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet y0 = 0;\n\t\tlet y1 = 0;\n\n\t\tconst upDepth = this.get(\"upDepth\", 0) + 1;\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tconst width = this.innerWidth();\n\t\tconst height = this.innerHeight();\n\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tconst levelHeight = height / (maxDepth + 1);\n\t\tconst levelWidth = width / (maxDepth + 1);\n\t\tconst initialDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\n\t\tlet downDepth = this._currentDownDepth;\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0;\n\t\t\t\tx1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = hierarchyNode.x0;\n\t\t\t\ty1 = hierarchyNode.x1;\n\n\t\t\t\tx0 = x1 - levelWidth * upDepth;\n\t\t\t\tx1 = x0 + levelWidth * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\ty0 = 0;\n\t\t\t\t\ty1 = height;\n\t\t\t\t\tx0 = levelWidth * topDepth;\n\t\t\t\t\tx1 = x0 + levelWidth * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0;\n\t\t\t\tx1 = hierarchyNode.x1;\n\n\t\t\t\ty0 = hierarchyNode.y0;\n\t\t\t\ty1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = y1 - levelHeight * upDepth;\n\t\t\t\ty1 = y0 + levelHeight * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\tx0 = 0;\n\t\t\t\t\tx1 = width;\n\t\t\t\t\ty0 = levelHeight * topDepth;\n\t\t\t\t\ty1 = y0 + levelHeight * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet scaleX = width / (x1 - x0);\n\t\tlet scaleY = height / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: -x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: -y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import type { Root } from \"../../core/Root\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Series } from \"../../core/render/Series\";\n\nimport { Partition, IPartitionPrivate, IPartitionSettings, IPartitionDataItem } from \"./Partition\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\n\n/**\n * @ignore\n */\nexport interface ISunburstDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ISunburstDataObject[],\n\tdataItem?: DataItem<ISunburstDataItem>\n};\n\nexport interface ISunburstDataItem extends IPartitionDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<ISunburstDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<ISunburstDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3PartitionNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>;\n\n\t/**\n\t * A [[Slice]] element of the node.\n\t */\n\tslice: Slice;\n\n}\n\nexport interface ISunburstSettings extends IPartitionSettings {\n\n\t/**\n\t * Start angle of the series.\n\t *\n\t * @default -90\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * End angle of the series.\n\t *\n\t * @default 270\n\t */\n\tendAngle?: number;\n\n\t/**\n\t * Inner radius of the suburst pie.\n\t *\n\t * Setting to negative number will mean pixels from outer radius.\n\t *\n\t * @default 0\n\t */\n\tinnerRadius?: number | Percent;\n\n\t/**\n\t * Outer radius of the sunburst pie.\n\t *\n\t * @default 100%\n\t */\n\tradius?: number | Percent;\n\n}\n\nexport interface ISunburstPrivate extends IPartitionPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tdr: number;\n\n\t/**\n\t * @ignore\n\t */\n\tdx: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius: number;\n\n\t/**\n\t * @ignore\n\t */\n\thierarchySize?: number;\n\n}\n\n/**\n * Builds a sunburst diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Sunburst extends Partition {\n\n\tdeclare public _settings: ISunburstSettings;\n\tdeclare public _privateSettings: ISunburstPrivate;\n\tdeclare public _dataItemSettings: ISunburstDataItem;\n\n\tprotected _tag: string = \"sunburst\";\n\n\tpublic static className: string = \"Sunburst\";\n\tpublic static classNames: Array<string> = Partition.classNames.concat([Sunburst.className]);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject> | undefined;\n\n\t/**\n\t * A list of node slice elements in a [[Sunburst]] chart.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.slices.template])\n\t);\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, [this.labels.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.nodesContainer.setAll({ x: p50, y: p50 });\n\t\tthis.setPrivateRaw(\"dx\", 0);\n\t\tthis.setPrivateRaw(\"dr\", 0);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"dr\") || this.isPrivateDirty(\"dx\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\n\t\t\tlet bounds = $math.getArcBounds(0, 0, this.get(\"startAngle\", 0), this.get(\"endAngle\", 360), 1);\n\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tconst wr = w / (bounds.right - bounds.left);\n\t\t\tconst hr = h / (bounds.bottom - bounds.top);\n\n\t\t\tlet s = Math.min(wr, hr);\n\n\t\t\tlet r = $utils.relativeToValue(this.get(\"radius\", p100), s);\n\t\t\tlet ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\n\n\t\t\tif (ir < 0) {\n\t\t\t\tir = r + ir;\n\t\t\t}\n\n\t\t\ts = r - ir;\n\n\t\t\tthis.setPrivateRaw(\"innerRadius\", ir);\n\t\t\tthis.setPrivateRaw(\"hierarchySize\", s);\n\n\t\t\tpartitionLayout.size([s, s]);\n\n\t\t\tthis.nodesContainer.setAll({\n\t\t\t\tdy: -r * (bounds.bottom + bounds.top) / 2, dx: -r * (bounds.right + bounds.left) / 2\n\t\t\t})\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\tconst node = dataItem.get(\"node\");\n\n\t\tnode.setAll({ x: 0, y: 0 });\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\tsliceInnerRadius -= dr;\n\t\t\tsliceRadius -= dr;\n\n\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\tslice.animate({ key: \"radius\", to: sliceRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"innerRadius\", to: sliceInnerRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"startAngle\", to: sliceStartAngle, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"arc\", to: arc, duration: duration, easing: easing })\n\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tslice._setDefault(\"fill\", fill);\n\t\t\tslice._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tif (slice) {\n\t\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\t\tsliceInnerRadius -= dr;\n\t\t\t\tsliceRadius -= dr;\n\n\t\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\t\tslice.setAll({ radius: sliceRadius, innerRadius: sliceInnerRadius, startAngle: sliceStartAngle, arc: arc });\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst slice = node.children.moveValue(this.slices.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", slice);\n\t\tdataItem.setRaw(\"slice\", slice);\n\n\t\tslice._setDataItem(dataItem);\n\n\t\tslice.on(\"arc\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"innerRadius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"radius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t}\n\n\tprotected _updateLabel(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tconst label = dataItem.get(\"label\") as RadialLabel;\n\n\t\tif (slice && label) {\n\t\t\tlet innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tlet radius = slice.get(\"radius\", 0);\n\t\t\tlet angle = slice.get(\"startAngle\", 0);\n\t\t\tlet arc = Math.abs(slice.get(\"arc\", 0));\n\t\t\tlet labelAngle = angle + arc / 2;\n\t\t\tlet textType = label.get(\"textType\");\n\n\t\t\tlet maxWidth = radius - innerRadius;\n\t\t\tlet maxHeight = radius * arc * $math.RADIANS;\n\n\t\t\tif (innerRadius == 0 && arc >= 360 && textType == \"radial\") {\n\t\t\t\tradius = 1;\n\t\t\t\tlabelAngle = 0;\n\t\t\t\tmaxWidth *= 2;\n\t\t\t\tmaxHeight = maxWidth;\t\t\t\t\n\t\t\t}\n\n\t\t\tif (Math.round(arc) >= 360 && textType == \"radial\") {\n\t\t\t\tlabelAngle = 0;\n\t\t\t}\t\t\t\n\n\t\t\tif (textType == \"circular\") {\n\t\t\t\tmaxWidth = arc * $math.RADIANS * (innerRadius + (radius - innerRadius) / 2) - 10;\n\t\t\t}\n\n\n\t\t\tlabel.setAll({ labelAngle: labelAngle });\n\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\tlabel.setPrivate(\"innerRadius\", innerRadius);\n\n\t\t\tlabel.setAll({\n\t\t\t\tmaxHeight: maxHeight,\n\t\t\t\tmaxWidth: maxWidth\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet upDepth = this.get(\"upDepth\", 0);\n\t\tlet topDepth = this.get(\"topDepth\", 0);\n\t\tlet currentDepth = hierarchyNode.depth;\n\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tlet downDepth = this._currentDownDepth;\n\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tconst levelHeight = hs / (maxDepth + 1);\n\n\t\tif (currentDepth < topDepth) {\n\t\t\tcurrentDepth = topDepth;\n\t\t}\n\n\t\tif (currentDepth - upDepth < 0) {\n\t\t\tupDepth = currentDepth;\n\t\t}\n\n\t\tx0 = hierarchyNode.x0;\n\t\tx1 = hierarchyNode.x1;\n\n\t\tlet scaleDepth = (downDepth + upDepth + 1);\n\n\t\tif (scaleDepth > maxDepth - topDepth + 1) {\n\t\t\tscaleDepth = maxDepth - topDepth + 1;\n\t\t}\n\n\t\tlet scaleX = hs / (x1 - x0);\n\t\tlet scaleY = hs / (levelHeight * scaleDepth);\n\n\t\tlet dr = Math.max(currentDepth - upDepth, topDepth) * levelHeight * scaleY;\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tlet dx = -x0 * scaleX\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dr\", to: dr, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dx\", to: dx, duration: duration, easing: easing });\n\t}\n\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._handleSingle(parent);\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tconst arc = slice.get(\"arc\", 0);\n\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tconst radius = innerRadius + (slice.get(\"radius\", 0) - innerRadius) * locationY;\n\n\t\t\tlet x = $math.cos(angle) * radius;\n\t\t\tlet y = $math.sin(angle) * radius;\n\n\t\t\tif ($math.round(arc, 5) === 360 && $math.round(innerRadius, 2) === 0) {\n\t\t\t\tx = 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tsprite.set(\"x\", x);\n\t\t\tsprite.set(\"y\", y);\n\t\t}\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst slice = dataItem.get(\"slice\");\n\n\t\t\tif (sprite && slice) {\n\t\t\t\tslice.on(\"arc\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\n\t\t\t\tslice.on(\"radius\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn bullet;\n\t\t}\n\t}\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { LinkedHierarchy, ILinkedHierarchyPrivate, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreeDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ITreeDataObject[],\n\tdataItem?: DataItem<ITreeDataItem>\n};\n\nexport interface ITreeDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of children data items.\n\t */\n\tchildren: Array<DataItem<ITreeDataItem>>;\n\n\t/**\n\t * Parent data item.\n\t * @type {DataItem<ITreeDataItem>}\n\t */\n\tparent: DataItem<ITreeDataItem>;\n\n}\n\nexport interface ITreeSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * If set to `true`, will flip the tree direction.\n\t *\n\t * @default false\n\t * @since 5.2.4\n\t */\n\tinversed?: boolean;\n\n}\n\nexport interface ITreePrivate extends ILinkedHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n}\n\nexport interface ITreeEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Displays a tree diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/tree/} for more info\n * @important\n */\nexport class Tree extends LinkedHierarchy {\n\n\tdeclare public _settings: ITreeSettings;\n\tdeclare public _privateSettings: ITreePrivate;\n\tdeclare public _dataItemSettings: ITreeDataItem;\n\n\tprotected _tag: string = \"tree\";\n\n\tpublic static className: string = \"Tree\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([Tree.className]);\n\n\tpublic _hierarchyLayout = d3hierarchy.tree();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<ITreeDataObject> | undefined;\n\tpublic _packData: ITreeDataObject | undefined;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"orientation\") || this.isDirty(\"inversed\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst layout = this._hierarchyLayout;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tlayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayout.size([this.innerHeight(), this.innerWidth()]);\n\t\t\t}\n\n\t\t\tlayout(this._rootNode);\n\t\t}\n\n\t\tsuper._updateVisuals();\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\tconst inversed = this.get(\"inversed\");\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tif (inversed) {\n\t\t\t\treturn { x: hierarchyNode.x, y: this.innerHeight() - hierarchyNode.y };\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inversed) {\n\t\t\t\treturn { x: this.innerWidth() - hierarchyNode.y, y: hierarchyNode.x };\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn { x: hierarchyNode.y, y: hierarchyNode.x };\n\t\t\t}\n\t\t}\n\t}\n\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreemapDataObject { name?: string, value?: number, children?: ITreemapDataObject[], dataItem?: DataItem<ITreemapDataItem> };\n\nexport interface ITreemapDataItem extends IHierarchyDataItem {\n\tchildren: Array<DataItem<ITreemapDataItem>>;\n\tparent: DataItem<ITreemapDataItem>;\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\trectangle: RoundedRectangle;\n}\n\nexport interface ITreemapSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingInner?: number;\n\n\t/**\n\t * Gap between nodes and outer edge of the chart. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingOuter?: number;\n\n\t/**\n\t * Gap between nodes and top edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingTop?: number;\n\n\t/**\n\t * Gap between nodes and bottomedge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingBottom?: number;\n\n\t/**\n\t * Gap between nodes and left edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingLeft?: number;\n\n\t/**\n\t * Gap between nodes and bottom edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingRight?: number;\n\n\t/**\n\t * An algorithm to use when laying out node rectangles.\n\t *\n\t * @see {@link }\n\t * @default \"squarify\"\n\t */\n\tlayoutAlgorithm?: \"binary\" | \"squarify\" | \"slice\" | \"dice\" | \"sliceDice\";\n\n}\n\nexport interface ITreemapPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Treemap series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/} for more info\n */\nexport class Treemap extends Hierarchy {\n\n\tdeclare public _settings: ITreemapSettings;\n\tdeclare public _privateSettings: ITreemapPrivate;\n\tdeclare public _dataItemSettings: ITreemapDataItem;\n\n\tprotected _tag: string = \"treemap\";\n\n\tpublic static className: string = \"Treemap\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Treemap.className]);\n\n\tpublic readonly rectangleTemplate: Template<RoundedRectangle> = Template.new({});\n\n\tpublic _treemapLayout = d3hierarchy.treemap().tile(d3hierarchy.treemapSquarify);\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject> | undefined;\n\n\t/**\n\t * A list of node rectangle elements in a [[Treemap]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"layoutAlgorithm\")) {\n\t\t\tlet algorithm;\n\n\t\t\tswitch (this.get(\"layoutAlgorithm\")) {\n\t\t\t\tcase \"squarify\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSquarify;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"binary\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapBinary;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"slice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSlice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapDice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sliceDice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSliceDice;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (algorithm) {\n\t\t\t\tthis._treemapLayout = d3hierarchy.treemap().tile(algorithm);\n\t\t\t}\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"nodePaddingRight\") || this.isDirty(\"nodePaddingLeft\") || this.isDirty(\"nodePaddingTop\") || this.isDirty(\"nodePaddingBottom\") || this.isDirty(\"nodePaddingOuter\") || this.isDirty(\"nodePaddingInner\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst treemapLayout = this._treemapLayout;\n\t\t\ttreemapLayout.size([this.innerWidth(), this.innerHeight()]);\n\n\t\t\tconst paddingLeft = this.get(\"nodePaddingLeft\");\n\t\t\tconst paddingRight = this.get(\"nodePaddingRight\");\n\t\t\tconst paddingTop = this.get(\"nodePaddingTop\");\n\t\t\tconst paddingBottom = this.get(\"nodePaddingBottom\");\n\t\t\tconst paddingInner = this.get(\"nodePaddingInner\");\n\t\t\tconst paddingOuter = this.get(\"nodePaddingOuter\");\n\t\t\tif ($type.isNumber(paddingLeft)) {\n\t\t\t\ttreemapLayout.paddingLeft(paddingLeft);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingRight)) {\n\t\t\t\ttreemapLayout.paddingRight(paddingRight);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingTop)) {\n\t\t\t\ttreemapLayout.paddingTop(paddingTop);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingBottom)) {\n\t\t\t\ttreemapLayout.paddingBottom(paddingBottom);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingInner)) {\n\t\t\t\ttreemapLayout.paddingInner(paddingInner);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingOuter)) {\n\t\t\t\ttreemapLayout.paddingOuter(paddingOuter);\n\t\t\t}\n\n\t\t\ttreemapLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst w = x1 - x0;\n\t\tconst h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.setPrivate(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.setPrivate(\"maxHeight\", rectangle.height());\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst nodePaddingOuter = this.get(\"nodePaddingOuter\", 0);\n\n\t\tlet x0 = hierarchyNode.x0 + nodePaddingOuter;\n\t\tlet x1 = hierarchyNode.x1 - nodePaddingOuter;\n\n\t\tlet y0 = hierarchyNode.y0 + nodePaddingOuter;\n\t\tlet y1 = hierarchyNode.y1 - nodePaddingOuter;\n\n\t\tlet scaleX = (this.innerWidth() - nodePaddingOuter * 2) / (x1 - x0);\n\t\tlet scaleY = (this.innerHeight() - nodePaddingOuter * 2) / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: nodePaddingOuter - x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: nodePaddingOuter - y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import * as m from \"./../../dist/es2015/hierarchy.js\";\nexport const am5hierarchy = m;"],"names":["setupDefaultRules","ic","this","_root","interfaceColors","gridLayout","r","rule","bind","setAll","legendLabelText","legendValueText","width","height","colors","ColorSet","step","downDepth","initialDepth","singleBranchOnly","maskContent","animationEasing","toggleKey","setStateOnChildren","position","isMeasured","cursorOverStyle","tooltipText","centerX","centerY","paddingBottom","paddingTop","paddingRight","paddingLeft","text","populateText","oversizedBehavior","minScale","strokeWidth","strokeOpacity","strength","distance","fillOpacity","radius","tooltipY","opacity","strokeDasharray","scale","interactive","states","create","layout","stateAnimationDuration","fontWeight","upDepth","visible","x","y","rotation","cornerRadiusBR","cornerRadiusTR","cornerRadiusBL","cornerRadiusTL","cornerRadius","textType","baseRadius","minRadius","maxRadius","initialFrames","centerStrength","manyBodyStrength","velocityDecay","linkWithStrength","showOnFrame","Infinity","topDepth","orientation","nodePadding","draggable","layoutAlgorithm","Theme","List","Template","Label","themeTags","labels","template","get","background","RoundedRectangle","dataItem","label","make","_setDataItem","events","on","series","selectDataItem","push","_defaultThemes","HierarchyDefaultTheme","_settings","_afterNew","_changed","isDirty","previous","_prevSettings","_disposer","event","_handleDataItem","dispose","set","children","clear","makeLabel","addTag","moveValue","Container","BreadcrumbBar","className","disabled","disableDataItem","enableDataItem","_clickDisposer","_isDragging","HierarchyNode","count","node","sum","i","length","value","hierarchy","data","Map","undefined","mapChildren","objectChildren","child","childs","n","root","Node","nodes","pop","Array","from","parent","depth","eachBefore","computeHeight","d","isArray","copyData","prototype","constructor","eachAfter","each","callback","that","index","call","next","find","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","Symbol","iterator","current","reverse","_tag","childData","setRaw","nodesContainer","fields","bulletsContainer","_prepareChildren","_valuesDirty","_treeData","first","dataItems","_makeHierarchyData","_index","_rootNode","setPrivateRaw","_updateValues","_sizeDirty","_updateVisuals","_selectDataItem","_currentDownDepth","_updateNodes","hierarchyNode","_updateNode","bullets","_makeBullets","hierarchyChildren","hierarchyChild","_dataItem","id","di","childDataItem","_getDataItemById","bullet","_handleBullets","_onDataClear","reset","processDataItem","makeNode","_processDataItem","_makeDataItem","d3HierarchyNode","getPrivate","dataValue","valuePercent","markDirtyText","updateLegendValue","d3HierarchyChild","disposeDataItem","removeValue","duration","promises","hideDataItem","hiddenState","stateAnimationEasing","easing","animate","key","to","waitForStop","hide","hideTooltip","Promise","all","showDataItem","show","maxDepth","isHidden","applyAnimate","skipDisptach","type","dispatch","Math","min","inited","currentDepth","_handleSingle","_zoom","bulletFunction","_makeBullet","sprite","_positionBullet","locationX","locationY","hover","unhover","Series","Hierarchy","link","_updateLinks","_onHide","_onShow","classNames","concat","LinkedHierarchyNode","_clear","sourceNode","targetNode","_display","moveTo","lineTo","_beforeChanged","_markDirtyKey","Graphics","HierarchyLink","Circle","C","circles","outerCircles","circle","setPrivate","outerCircle","maxWidth","maxHeight","_handleRadiusChange","parentDataItem","linkDataItems","updateLinkWith","linkWith","linkWithDataItem","point","_getPoint","_animatePositions","fill","_setDefault","sourceLinks","lnk","targetLinks","linksContainer","_processLink","_disposeLink","_handleUnlink","linked","_link","_source","_target","LinkedHierarchy","m","initialAngle","PI","sqrt","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","forces","stepper","timer","random","s","tick","stop","iterations","forEach","force","fx","vx","fy","vy","initializeNodes","isNaN","angle","cos","sin","initializeForce","initialize","restart","_","arguments","randomSource","name","delete","dx","dy","d2","closest","tree","xm","ym","xp","yp","right","bottom","j","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","leaf_copy","treeProto","radii","xi","yi","ri","ri2","visitAfter","prepare","visit","apply","quad","rj","l","jiggle","constant","_nodes","_random","nodeById","nodeId","Error","strengths","distances","bias","map","initializeStrength","initializeDistance","add","cover","xz","yz","floor","z","extent","x2","y2","q","x3","y3","quads","remove","retainer","removeAll","size","d3forceSimulation","_tick","updateNodePositions","_updateForces","d3ForceNode","innerWidth","innerHeight","_nodesDirty","collisionForce","linkForce","_links","restartSimulation","_updateChildren","w","max","h","pt","pl","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","distanceMin","distanceMax","theta","d3node","_clearDirty","linkDatum","getDistance","getStrength","d3Nodes","d3Node","sourceDataItem","targetDataItem","_updateRadius","valueWorking","d3Link","ForceDirected","optional","f","required","constantZero","extendBasis","B","p","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","r1","r2","x21","y21","r21","r3","a2","a3","b2","b3","c2","c3","d1","d3","ab","xa","xb","ya","yb","A","place","intersects","score","packSiblingsRandom","array","aa","ca","sj","sk","pack","e","t","shuffle","packEncloseRandom","defaultRadius","padding","radiusLeaf","packChildrenRandom","translateChild","isPrivateDirty","_updateNodesScale","packLayout","_packLayout","scaleR","animatePrivate","Pack","round","partition","positionNode","rectangles","partitionLayout","_partitionLayout","rectangle","scaleX","scaleY","_makeNode","levelHeight","levelWidth","Partition","Slice","slices","RadialLabel","bounds","wr","left","hr","top","ir","hs","slice","startAngle","endAngle","sliceStartAngle","arc","sliceInnerRadius","sliceRadius","innerRadius","_updateLabel","labelAngle","scaleDepth","Sunburst","defaultSeparation","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","nextAncestor","vim","TreeNode","separation","nodeSize","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","Object","_hierarchyLayout","inversed","Tree","custom","ratio","squarify","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","rows","i0","i1","dice","squarifyRatio","tile","paddingStack","paddingInner","treemap","paddingOuter","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","algorithm","_treemapLayout","treemapLayout","nodePaddingOuter","Treemap","am5hierarchy"],"sourceRoot":""}