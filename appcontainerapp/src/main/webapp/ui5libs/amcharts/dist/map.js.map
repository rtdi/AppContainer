{"version":3,"file":"map.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-array/src/fsum.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/math.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/noop.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/stream.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/length.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/distance.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapLine.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/interpolate.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-array/src/range.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/graticule.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/GraticuleSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/compose.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/rotation.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/buffer.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/pointEqual.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/rejoin.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/cartesian.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/polygonContains.js","webpack://@amcharts/amcharts5/./node_modules/d3-array/src/merge.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/circle.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/circle.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/rectangle.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/clip/line.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/identity.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/transform.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/bounds.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/fit.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/resample.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/mercator.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/area.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/centroid.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/context.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/measure.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/string.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/centroid.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/area.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/bounds.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapUtils.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapChart.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/path/index.js","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapPointSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapPolygon.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/map/MapPolygonSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/map/ZoomControl.ts","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/orthographic.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/equirectangular.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/conic.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/albersUsa.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/albers.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/equalEarth.js","webpack://@amcharts/amcharts5/./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://@amcharts/amcharts5/./node_modules/polylabel/polylabel.js","webpack://@amcharts/amcharts5/./node_modules/tinyqueue/index.js","webpack://@amcharts/amcharts5/./tmp/webpack/map.js"],"sourcesContent":["import type { MapChart } from \"./MapChart\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\n\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IMapSeriesDataItem extends ISeriesDataItem {\n\tgeometry?: GeoJSON.Geometry;\n\tgeometryType?: GeoJSON.GeoJsonGeometryTypes;\n\tvalue?: number;\n}\n\nexport interface IMapSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Map data in GeoJSON format.\n\t */\n\tgeoJSON?: GeoJSON.GeoJSON;\n\n\t/**\n\t * An array of map object ids from geodata to include in the map.\n\t *\n\t * If set, only those objects listed in `include` will be shown.\n\t */\n\tinclude?: Array<string>;\n\n\t/**\n\t * An array of map object ids from geodata to omit when showing the map.\n\t */\n\texclude?: Array<string>;\n\n\t/**\n\t * A field in series `data` that will hold map object's numeric value.\n\t *\n\t * It can be used in a number of places, e.g. tooltips, heat rules, etc.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryTypeField?: string;\n\n\t/**\n\t * Names of geodata items, such as countries, to replace by from loaded\n\t * geodata.\n\t *\n\t * Can be used to override built-in English names for countries.\n\t *\n\t * ```TypeScript\n\t * import am5geodata_lang_ES from '@amcharts5-geodata/lang/es';\n\t * // ...\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t * ```JavaScript\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t *\n\t * @since 5.1.13\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-translations/} for more info\n\t */\n\tgeodataNames?: { [index: string]: string };\n\n}\n\nexport interface IMapSeriesPrivate extends ISeriesPrivate {\n}\n\nexport interface IMapSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Invoked when geodata is finished loading and processed.\n\t */\n\tgeodataprocessed: {};\n\n}\n\n/**\n * Base class for map series.\n */\nexport abstract class MapSeries extends Series {\n\tpublic static className: string = \"MapSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([MapSeries.className]);\n\n\tdeclare public chart: MapChart | undefined;\n\tdeclare public _settings: IMapSeriesSettings;\n\tdeclare public _privateSettings: IMapSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapSeriesDataItem;\n\tdeclare public _events: IMapSeriesEvents;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [];\n\n\tpublic _geometries: Array<GeoJSON.Geometry> = [];\n\tprotected _geoJSONparsed: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"geometry\", \"geometryType\");\n\t\tthis._setRawDefault(\"geometryField\", \"geometry\");\n\t\tthis._setRawDefault(\"geometryTypeField\", \"geometryType\");\n\t\tthis._setRawDefault(\"idField\", \"id\");\n\n\t\tthis.on(\"geoJSON\", (geoJSON) => {\n\t\t\tlet previous = this._prevSettings.geoJSON;\n\t\t\tif (previous && previous != geoJSON) {\n\t\t\t\tthis.data.clear();\n\t\t\t}\n\t\t})\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty || this.isDirty(\"geoJSON\") || this.isDirty(\"include\") || this.isDirty(\"exclude\")) {\n\t\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\t\tlet previous = this._prevSettings.geoJSON;\n\n\t\t\tif (previous && previous != geoJSON) {\n\t\t\t\tthis._prevSettings.geoJSON = undefined;\n\t\t\t\tthis._geoJSONparsed = false;\n\t\t\t}\n\n\t\t\tif (!this._geoJSONparsed) {\n\t\t\t\tthis._parseGeoJSON();\n\t\t\t\tthis._geoJSONparsed = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected checkInclude(id: string, includes: string[] | undefined, excludes?: string[] | undefined): boolean {\n\t\tif (includes) {\n\t\t\tif (includes.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (includes.indexOf(id) == -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (excludes && excludes.length > 0) {\n\t\t\tif (excludes.indexOf(id) != -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _parseGeoJSON() {\n\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tif (geoJSON) {\n\n\t\t\tlet features!: any[];\n\n\t\t\tif (geoJSON.type == \"FeatureCollection\") {\n\t\t\t\tfeatures = geoJSON.features;\n\t\t\t}\n\t\t\telse if (geoJSON.type == \"Feature\") {\n\t\t\t\tfeatures = [geoJSON];\n\t\t\t}\n\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\n\t\t\t\tfeatures = [{ geometry: geoJSON }];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"nothing found in geoJSON\");\n\t\t\t}\n\n\t\t\tconst geodataNames = this.get(\"geodataNames\");\n\t\t\tif (features) {\n\n\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\n\t\t\t\t\tlet feature: any = features[i];\n\t\t\t\t\tlet geometry: any = feature.geometry;\n\n\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\tlet type = geometry.type;\n\t\t\t\t\t\tlet id: string = feature.id;\n\n\t\t\t\t\t\tif (geodataNames && geodataNames[id]) {\n\t\t\t\t\t\t\tfeature.properties.name = geodataNames[id];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._types.indexOf(type) != -1) {\n\t\t\t\t\t\t\tif (!this.checkInclude(id, this.get(\"include\"), this.get(\"exclude\"))) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet dataItem: any;\n\n\t\t\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\t\t\t// find data object in user-provided data\n\t\t\t\t\t\t\t\tdataItem = $array.find(this.dataItems, (value: any) => {\n\t\t\t\t\t\t\t\t\treturn value.get(\"id\") == id;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet dataObject: any;\n\n\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\tdataObject = dataItem.dataContext;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// create one if not found\n\t\t\t\t\t\t\tif (!dataItem) {\n\t\t\t\t\t\t\t\tdataObject = { geometry: geometry, geometryType: type, id: id, madeFromGeoData: true };\n\t\t\t\t\t\t\t\tthis.data.push(dataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// in case found\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\n\t\t\t\t\t\t\t\tif (!dataObject.geometry) {\n\t\t\t\t\t\t\t\t\tdataObject.geometry = geometry;\n\t\t\t\t\t\t\t\t\tdataObject.geometryType = type;\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometryType\", type);\n\t\t\t\t\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy properties data to datacontext\n\t\t\t\t\t\t\t$object.softCopyProperties(feature.properties, dataObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst type = \"geodataprocessed\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirtyProjection(): void\n\n\tpublic _placeBulletsContainer(_chart: MapChart) {\n\t\tthis.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic projection(): GeoProjection | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.get(\"projection\");\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic geoPath(): GeoPath | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.getPrivate(\"geoPath\");\n\t\t}\n\t}\n\n\tprotected _addGeometry(geometry: any) {\n\t\tif (geometry) {\n\t\t\tthis._geometries.push(geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeGeometry(geometry: any) {\n\t\tif (geometry) {\n\t\t\t$array.remove(this._geometries, geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\t}\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import type { MapLineSeries } from \"./MapLineSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport { geoLength, geoInterpolate, geoDistance } from \"d3-geo\";\n\nexport interface IMapLineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n\n}\n\nexport interface IMapLinePrivate extends IGraphicsPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tseries: MapLineSeries;\n\n}\n\n/**\n * A line object in a [[MapLineSeries]].\n */\nexport class MapLine extends Graphics {\n\n\tdeclare public _settings: IMapLineSettings;\n\tdeclare public _privateSettings: IMapLinePrivate;\n\n\tpublic static className: string = \"MapLine\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapLine.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\t\tif (series) {\n\t\t\t\t\tconst chart = series.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tconst projection = chart.get(\"projection\");\n\t\t\t\t\t\tlet clipAngle: number | null = null;\n\n\t\t\t\t\t\tif (projection) {\n\t\t\t\t\t\t\tclipAngle = projection.clipAngle();\n\t\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\t\t\t\tif (geoPath) {\n\t\t\t\t\t\t\tthis._clear = true;\n\n\t\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\t\tif (projection && series.get(\"clipBack\") === false) {\n\t\t\t\t\t\t\t\t\tprojection.clipAngle(180);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\t\tgeoPath.context(null);\n\n\t\t\t\t\t\t\t\tif (projection) {\n\t\t\t\t\t\t\t\t\tprojection.clipAngle(clipAngle as any);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Converts relative position along the line (0-1) into pixel coordinates.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinates\n\t */\n\tpublic positionToGeoPoint(position: number): IGeoPoint {\n\n\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tlet totalDistance: number = geoLength(geometry);\n\t\t\tlet currentDistance: number = 0;\n\n\t\t\tlet distanceAB: number;\n\t\t\tlet positionA: number = 0;\n\t\t\tlet positionB: number = 0;\n\t\t\tlet pointA!: [number, number];\n\t\t\tlet pointB!: [number, number];\n\n\t\t\tlet coordinates = geometry.coordinates;\n\t\t\tif (coordinates) {\n\n\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t}\n\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t}\n\n\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\tif (segment.length > 1) {\n\t\t\t\t\t\tfor (let p = 1; p < segment.length; p++) {\n\t\t\t\t\t\t\tpointA = segment[p - 1] as [number, number];\n\t\t\t\t\t\t\tpointB = segment[p] as [number, number];\n\n\t\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\n\t\t\t\t\t\t\tdistanceAB = geoDistance(pointA, pointB);\n\t\t\t\t\t\t\tcurrentDistance += distanceAB;\n\t\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\n\n\t\t\t\t\t\t\tif (positionA <= position && positionB > position) {\n\t\t\t\t\t\t\t\ts = segments.length;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (segment.length == 1) {\n\t\t\t\t\t\tpointA = segment[0] as [number, number];;\n\t\t\t\t\t\tpointB = segment[0] as [number, number];;\n\t\t\t\t\t\tpositionA = 0;\n\t\t\t\t\t\tpositionB = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (pointA && pointB) {\n\t\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\n\t\t\t\t\tlet location = geoInterpolate(pointA, pointB)(positionAB);\n\t\t\t\t\treturn { longitude: location[0], latitude: location[1] }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import type { IMapPointSeriesDataItem } from \"./MapPointSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapLine } from \"./MapLine\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Template } from \"../../core/util/Template\";\n\nimport * as $array from \"../../core/util/Array\";\n\n/**\n * @ignore\n */\nexport interface IMapLineSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapLineSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapLine]] object.\n\t */\n\tmapLine?: MapLine;\n\n\t/**\n\t * GeoJSON geometry of the line.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * An array of data items from [[MapPointSeries]] to use as line end-points.\n\t */\n\tpointsToConnect?: Array<DataItem<IMapPointSeriesDataItem>>;\n\n}\n\nexport interface IMapLineSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true` will hide line segments that are in the invisible range\n\t * of the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t */\n\tclipBack?: boolean;\n\n}\n\n/**\n * Creates a map series for displaying lines on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\n * @important\n */\nexport class MapLineSeries extends MapSeries {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapLine(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapLine {\n\t\tconst mapLine = this.children.push(this.mapLines.make());\n\t\tmapLine._setDataItem(dataItem);\n\t\tthis.mapLines.push(mapLine);\n\t\treturn mapLine;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all lines in series.\n\t *\n\t * `mapLines.template` can also be used to configure lines.\n\t *\n\t * @default new ListTemplate<MapLine>\n\t */\n\tpublic readonly mapLines: ListTemplate<MapLine> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapLine._new(this._root, {}, [this.mapLines.template])\n\t);\n\n\tpublic static className: string = \"MapLineSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapLineSeries.className]);\n\n\tdeclare public _settings: IMapLineSeriesSettings;\n\tdeclare public _privateSettings: IMapLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapLineSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"LineString\", \"MultiLineString\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tmapLine.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\tif (!mapLine) {\n\t\t\tmapLine = this.makeMapLine(dataItem);\n\t\t}\n\n\t\tdataItem.set(\"mapLine\", mapLine);\n\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\tif (pointsToConnect) {\n\t\t\t$array.each(pointsToConnect, (point) => {\n\n\t\t\t\tpoint.on(\"geometry\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"longitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"latitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis.markDirtyValues(dataItem);\n\t\t}\n\n\t\tmapLine.setPrivate(\"series\", this);\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\tlet coordinates: Array<Array<number>> = [];\n\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\tconst longitude = point.get(\"longitude\");\n\t\t\t\t\t\tconst latitude = point.get(\"latitude\");\n\t\t\t\t\t\tif (longitude != null && latitude != null) {\n\t\t\t\t\t\t\tcoordinates.push([longitude, latitude]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst geometry = point.get(\"geometry\");\n\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\tconst coords = geometry.coordinates;\n\t\t\t\t\t\t\t\tif (coords) {\n\t\t\t\t\t\t\t\t\tcoordinates.push([coords[0] as any, coords[1] as any]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tlet geometry: any = { type: \"LineString\", coordinates: coordinates };\n\n\t\t\t\t\tdataItem.setRaw(\"geometry\", geometry);\n\t\t\t\t\tmapLine.set(\"geometry\", geometry);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmapLine.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tthis.mapLines.removeValue(mapLine);\n\t\t\tmapLine.dispose();\n\t\t}\n\t}\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import { MapLineSeries, IMapLineSeriesSettings, IMapLineSeriesPrivate, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport { geoGraticule } from \"d3-geo\";\n\n\nexport interface IGraticuleSeriesDataItem extends IMapLineSeriesDataItem {\n}\n\nexport interface IGraticuleSeriesPrivate extends IMapLineSeriesPrivate {\n}\n\nexport interface IGraticuleSeriesSettings extends IMapLineSeriesSettings {\n\n\t/**\n\t * Place a grid line every Xth latitude/longitude.\n\t *\n\t * @default 10\n\t */\n\tstep?: number;\n}\n\n/**\n * A [[MapChart]] series to draw a map grid.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/graticule-series/} for more info\n * @important\n */\nexport class GraticuleSeries extends MapLineSeries {\n\n\tpublic static className: string = \"GraticuleSeries\";\n\tpublic static classNames: Array<string> = MapLineSeries.classNames.concat([GraticuleSeries.className]);\n\n\tdeclare public _settings: IGraticuleSeriesSettings;\n\tdeclare public _privateSettings: IGraticuleSeriesPrivate;\n\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.dataItems.push(this._dataItem);\n\t\tthis._generate();\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"step\")) {\n\t\t\tthis._generate();\n\t\t}\n\t}\n\n\tprotected _generate() {\n\t\tlet graticule = geoGraticule();\n\n\t\tif (graticule) {\n\t\t\tconst step = this.get(\"step\", 10);\n\n\t\t\tgraticule.stepMinor([360, 360]);\n\t\t\tgraticule.stepMajor([step, step]);\n\t\t\tthis._dataItem.set(\"geometry\", graticule());\n\t\t}\n\t}\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import { Theme } from \"../../core/Theme\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport { geoMercator } from \"d3-geo\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class MapChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/map\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"MapChart\").setAll({\r\n\t\t\tprojection: geoMercator(),\r\n\t\t\tpanX: \"translateX\",\r\n\t\t\tpanY: \"translateY\",\r\n\t\t\tpinchZoom: true,\r\n\t\t\tzoomStep: 2,\r\n\t\t\tzoomLevel: 1,\r\n\t\t\trotationX: 0,\r\n\t\t\trotationY: 0,\r\n\t\t\trotationZ: 0,\r\n\t\t\tmaxZoomLevel: 32,\r\n\t\t\tminZoomLevel: 1,\r\n\t\t\twheelY: \"zoom\",\r\n\t\t\twheelX: \"none\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic),\r\n\t\t\twheelEasing: $ease.out($ease.cubic),\r\n\t\t\twheelDuration: 0,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tmaxPanOut: 0.4\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapLine\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"MapPointSeries\").setAll({\r\n\t\t\tclipFront: false,\r\n\t\t\tclipBack: true\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapPolygon\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t\tfillOpacity: 1,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 0.2,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"plus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t\tdisplay.moveTo(0, -4);\r\n\t\t\t\tdisplay.lineTo(0, 4);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"minus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/map: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"GraticuleSeries\").setAll({\r\n\t\t\tstep: 10\r\n\t\t});\r\n\r\n\r\n\t}\r\n}\r\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport * as $math from \"../../core/util/Math\";\nimport { geoCircle, geoCentroid, geoBounds } from \"d3-geo\";\n\n/**\n * Returns a GeoJSON representation of a circle, suitable for use as `geometry` value\n * in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   geoPoint  Coordinates\n * @param   radius    Circle radius in degrees\n * @return            Polygon geometry\n */\nexport function getGeoCircle(geoPoint: IGeoPoint, radius: number): GeoJSON.Polygon {\n\treturn geoCircle().center([geoPoint.longitude, geoPoint.latitude]).radius(radius)();\n}\n\n/**\n * @ignore\n */\nexport function getGeoCentroid(geometry: GeoJSON.GeometryObject): IGeoPoint {\n\tconst centroid = geoCentroid(geometry);\n\treturn { longitude: centroid[0], latitude: centroid[1] };\n}\n\n/**\n * @ignore\n */\nexport function getGeoBounds(geometry: GeoJSON.GeometryObject): { left: number, right: number, top: number, bottom: number } {\n\tconst bounds = geoBounds(geometry);\n\n\tif (bounds) {\n\t\tconst geoBounds = { left: bounds[0][0], right: bounds[1][0], top: bounds[1][1], bottom: bounds[0][1] };\n\t\tif(geoBounds.right < geoBounds.left){\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\t\treturn geoBounds;\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n/**\n * Returns a GeoJSON representation of a rectangle, suitable for use\n * as `geometry` value in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   north  North latitude\n * @param   east   East longitude\n * @param   south  South latitude\n * @param   west   West longitude\n * @return         polygon geometry\n */\nexport function getGeoRectangle(north: number, east: number, south: number, west: number): GeoJSON.MultiPolygon {\n\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\n\n\tif (west <= -180) {\n\t\twest = -179.9999;\n\t}\n\tif (south <= -90) {\n\t\tsouth = -89.9999;\n\t}\n\tif (north >= 90) {\n\t\tnorth = 89.9999;\n\t}\n\tif (east >= 180) {\n\t\teast = 179.9999;\n\t}\n\n\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\n\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\n\t\tlet surface: Array<[number, number]> = [];\n\t\tmultiPolygon.push([surface]);\n\n\t\tif (ln + stepLong > east) {\n\t\t\tstepLong = east - ln;\n\t\t}\n\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\n\t\t\tsurface.push([ll, north]);\n\t\t}\n\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\n\t\t\tsurface.push([ln + stepLong, lt]);\n\t\t}\n\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\n\t\t\tsurface.push([ll, south]);\n\t\t}\n\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\n\t\t\tsurface.push([ln, lt]);\n\t\t}\n\t}\n\n\treturn { type: \"MultiPolygon\", coordinates: multiPolygon };\n}\n\n/**\n * Update longitudes and latitudes that wrap around -180/180 and -90/90 values.\n * \n * @param   geoPoint  Input coordinates\n * @return            Updated coordinates\n */\nexport function normalizeGeoPoint(geoPoint: IGeoPoint): IGeoPoint {\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\n\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\n\n\tif (Math.abs(latitude180) > 90) {\n\t\tlongitude = wrapAngleTo180(longitude + 180);\n\t}\n\n\tgeoPoint.longitude = longitude;\n\tgeoPoint.latitude = latitude;\n\n\treturn geoPoint;\n}\n\n/**\n * @ignore\n */\nexport function wrapAngleTo180(angle: number): number {\n\tangle = angle % 360;\n\n\tif (angle > 180) {\n\t\tangle -= 360;\n\t}\n\tif (angle < -180) {\n\t\tangle += 360;\n\t}\n\n\treturn angle;\n}","import type { MapSeries } from \"./MapSeries\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { ZoomControl } from \"./ZoomControl\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nimport { MapChartDefaultTheme } from \"./MapChartDefaultTheme\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { geoPath } from \"d3-geo\";\nimport { Color } from \"../../core/util/Color\";\nimport { registry } from \"../../core/Registry\";\n\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $mapUtils from \"./MapUtils\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\n\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nexport interface IMapChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * A projection to use when plotting the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Projections} for more info\n\t */\n\tprojection?: GeoProjection;\n\n\t/**\n\t * Current zoom level.\n\t */\n\tzoomLevel?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ttranslateX?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ttranslateY?: number;\n\n\t/**\n\t * Vertical centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationY?: number;\n\n\t/**\n\t * Horizontal centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationX?: number;\n\n\t/**\n\t * Depth centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationZ?: number;\n\n\t/**\n\t * Highest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 32\n\t */\n\tmaxZoomLevel?: number;\n\n\t/**\n\t * Lowest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 1\n\t */\n\tminZoomLevel?: number;\n\n\t/**\n\t * Increment zoom level by `zoomStep` when user zooms in via [[ZoomControl]] or\n\t * API.\n\t *\n\t * @default 2\n\t */\n\tzoomStep?: number;\n\n\t/**\n\t * Defines what happens when map is being dragged horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateX\"\n\t */\n\tpanX?: \"none\" | \"rotateX\" | \"translateX\";\n\n\t/**\n\t * Defines what happens when map is being dragged vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateY\"\n\t */\n\tpanY?: \"none\" | \"rotateY\" | \"translateY\";\n\n\t/**\n\t * Enables pinch-zooming of the map on multi-touch devices.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Pinch_zoom} for more info\n\t * @default true\n\t */\n\tpinchZoom?: boolean;\n\n\t/**\n\t * Defines what happens when mouse wheel is turned horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"none\"\n\t */\n\twheelX?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Defines what happens when mouse wheel is turned vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"zoom\"\n\t */\n\twheelY?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Sensitivity of a mouse wheel.\n\t *\n\t * @default 1\n\t */\n\twheelSensitivity?: number;\n\n\t/**\n\t * Duration of mouse-wheel action animation, in milliseconds.\n\t */\n\twheelDuration?: number;\n\n\t/**\n\t * An easing function to use for mouse wheel action animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\twheelEasing?: (t: Time) => Time;\n\n\t/**\n\t * Duration of zoom/pan animations, in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for zoom/pan animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\n\t/**\n\t * A [[ZoomControl]] instance.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Zoom_control} for more info\n\t */\n\tzoomControl?: ZoomControl;\n\n\t/**\n\t * Initial/home zoom level.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeZoomLevel?: number;\n\n\t/**\n\t * Initial coordinates to center map on load or `goHome()` call.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeGeoPoint?: IGeoPoint;\n\n\t/**\n\t * How much of a map can go outside the viewport.\n\t *\n\t * @default 0.4\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning_outside_viewport} for more info\n\t */\n\tmaxPanOut?: number;\n\n}\n\nexport interface IMapChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tgeoPath: GeoPath;\n\n\t/**\n\t * @ignore\n\t */\n\tmapScale: number;\n\n}\n\n\nexport interface IMapChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when geo bounds of the map change, usually after map is iniitalized\n\t */\n\tgeoboundschanged: {};\n\n}\n\n\nexport class MapChart extends SerialChart {\n\tpublic static className: string = \"MapChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([MapChart.className]);\n\n\tdeclare public _settings: IMapChartSettings;\n\tdeclare public _privateSettings: IMapChartPrivate;\n\tdeclare public _seriesType: MapSeries;\n\tdeclare public _events: IMapChartEvents;\n\n\tprotected _downTranslateX: number | undefined;\n\tprotected _downTranslateY: number | undefined;\n\tprotected _downRotationX: number | undefined;\n\tprotected _downRotationY: number | undefined;\n\tprotected _downRotationZ: number | undefined;\n\tprotected _pLat: number = 0;\n\tprotected _pLon: number = 0;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\tprotected _downZoomLevel: number = 1;\n\tprotected _doubleDownDistance: number = 0;\n\n\tprotected _dirtyGeometries: boolean = false;\n\tprotected _geometryColection: GeoJSON.GeometryCollection = { type: \"GeometryCollection\", geometries: [] };\n\n\tprotected _centerLocation: [number, number] | null = null;\n\n\tprotected _za?: Animation<this[\"_settings\"][\"zoomLevel\"]>;\n\tprotected _rxa?: Animation<this[\"_settings\"][\"rotationX\"]>;\n\tprotected _rya?: Animation<this[\"_settings\"][\"rotationY\"]>;\n\tprotected _txa?: Animation<this[\"_settings\"][\"translateX\"]>;\n\tprotected _tya?: Animation<this[\"_settings\"][\"translateY\"]>;\n\n\tprotected _mapBounds = [[0, 0], [0, 0]];\n\n\tprotected _geoCentroid: IGeoPoint = { longitude: 0, latitude: 0 };\n\tprotected _geoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\tprotected _prevGeoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _dispatchBounds: boolean = false;\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tprotected _pw?: number;\n\tprotected _ph?: number;\n\n\tprotected _mapFitted:boolean = false;\n\n\tprotected _centerX:number = 0;\n\tprotected _centerY:number = 0;\n\n\tprotected _makeGeoPath() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst path = geoPath();\n\t\tpath.projection(projection);\n\t\tthis.setPrivateRaw(\"geoPath\", path);\n\t}\n\n\t/**\n\t * Returns coordinates to geographical center of the map.\n\t */\n\tpublic geoCentroid() {\n\t\treturn this._geoCentroid;\n\t}\n\n\t/**\n\t * Returns geographical bounds of the map.\n\t */\n\tpublic geoBounds() {\n\t\treturn this._geoBounds;\n\t}\n\n\tprotected _handleSetWheel() {\n\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst chartContainer = this.chartContainer;\n\n\t\tif (wheelX != \"none\" || wheelY != \"none\") {\n\n\t\t\tthis._wheelDp = chartContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEasing = this.get(\"wheelEasing\")!;\n\t\t\t\tconst wheelSensitivity = this.get(\"wheelSensitivity\", 1);\n\t\t\t\tconst wheelDuration = this.get(\"wheelDuration\", 0);\n\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst chartContainer = this.chartContainer;\n\t\t\t\tconst point = chartContainer._display.toLocal(event.point);\n\n\t\t\t\tif ((wheelY == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaX, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst w = this.innerWidth();\n\t\tconst h = this.innerHeight();\n\n\t\tif (this.isDirty(\"projection\")) {\n\t\t\tthis._makeGeoPath();\n\t\t\tthis.markDirtyProjection();\n\t\t\tthis._fitMap();\n\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tif (projection.rotate) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t}\n\n\t\t\tlet prev = this._prevSettings.projection;\n\t\t\tif (prev && prev != projection) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\t\t\t\tif (prev.invert) {\n\t\t\t\t\tlet centerLocation = prev.invert([hw, hh]);\n\n\t\t\t\t\tif (centerLocation) {\n\n\t\t\t\t\t\tlet xy = projection(centerLocation);\n\t\t\t\t\t\tif (xy) {\n\t\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\t\tvar previousGeometries = this._geometryColection.geometries;\n\t\tif (this._dirtyGeometries) {\n\t\t\tthis._geometryColection.geometries = [];\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\t$array.pushAll(this._geometryColection.geometries, series._geometries);\n\t\t\t})\n\n\t\t\tthis._fitMap();\n\t\t}\n\n\t\tif (previousGeometries.length != 0 && (w != this._pw || h != this._ph || this._dirtyGeometries)) {\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\n\t\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\t\tconst newScale = projection.scale();\n\n\t\t\t\tthis.setPrivateRaw(\"mapScale\", newScale);\n\t\t\t\tprojection.scale(newScale * this.get(\"zoomLevel\", 1));\n\n\t\t\t\tif (this._centerLocation) {\n\t\t\t\t\tlet xy = projection(this._centerLocation);\n\t\t\t\t\tif (xy) {\n\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.markDirtyProjection();\n\t\t\t}\n\t\t}\n\n\t\tthis._pw = w;\n\t\tthis._ph = h;\n\n\t\tif (this.isDirty(\"zoomControl\")) {\n\t\t\tconst previous = this._prevSettings.zoomControl;\n\t\t\tconst zoomControl = this.get(\"zoomControl\")!;\n\t\t\tif (zoomControl !== previous) {\n\t\t\t\tthis._disposeProperty(\"zoomControl\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (zoomControl) {\n\t\t\t\t\tzoomControl.setPrivate(\"chart\", this);\n\t\t\t\t\tthis.children.push(zoomControl);\n\t\t\t\t}\n\n\t\t\t\tthis.setRaw(\"zoomControl\", zoomControl);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"zoomLevel\")) {\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tthis.markDirtyProjection();\n\t\t}\n\n\t\tif (this.isDirty(\"translateX\") || this.isDirty(\"translateY\")) {\n\t\t\tprojection.translate([this.get(\"translateX\", this.width() / 2), this.get(\"translateY\", this.height() / 2)])\n\t\t\tthis.markDirtyProjection();\n\t\t}\n\n\t\tif (projection.rotate) {\n\t\t\tif (this.isDirty(\"rotationX\") || this.isDirty(\"rotationY\") || this.isDirty(\"rotationZ\")) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t\tthis.markDirtyProjection();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _fitMap() {\n\t\tconst projection = this.get(\"projection\")!;\n\n\t\tlet w = this.innerWidth();\n\t\tlet h = this.innerHeight();\n\n\t\tif (w > 0 && h > 0) {\n\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\tthis.setPrivateRaw(\"mapScale\", projection.scale());\n\n\t\t\tconst translate = projection.translate();\n\n\t\t\tthis.setRaw(\"translateX\", translate[0]);\n\t\t\tthis.setRaw(\"translateY\", translate[1]);\n\n\t\t\tthis._centerX = translate[0];\n\t\t\tthis._centerY = translate[1];\n\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tthis._geoCentroid = $mapUtils.getGeoCentroid(this._geometryColection);\n\n\t\t\tconst bounds = $mapUtils.getGeoBounds(this._geometryColection);\n\t\t\tthis._geoBounds = bounds;\n\n\t\t\tif (this._geometryColection.geometries.length > 0) {\n\n\t\t\t\tbounds.left = $math.round(this._geoBounds.left, 3);\n\t\t\t\tbounds.right = $math.round(this._geoBounds.right, 3);\n\t\t\t\tbounds.top = $math.round(this._geoBounds.top, 3);\n\t\t\t\tbounds.bottom = $math.round(this._geoBounds.bottom, 3);\n\n\t\t\t\tconst prevGeoBounds = this._prevGeoBounds;\n\n\t\t\t\tif (prevGeoBounds && !$utils.sameBounds(bounds, prevGeoBounds)) {\n\t\t\t\t\tthis._dispatchBounds = true;\n\t\t\t\t\tthis._prevGeoBounds = bounds;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._mapFitted = true;\n\t\t}\n\t}\n\n\n\t/**\n\t * Repositions the map to the \"home\" zoom level and center coordinates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Resetting_position_level} for more info\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic goHome(duration?: number) {\n\t\tlet homeGeoPoint = this.get(\"homeGeoPoint\");\n\t\tconst homeZoomLevel = this.get(\"homeZoomLevel\", 1);\n\n\t\tif (!homeGeoPoint) {\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tconst bounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tconst left = bounds[0][0];\n\t\t\tconst top = bounds[0][1];\n\n\t\t\tconst right = bounds[1][0];\n\t\t\tconst bottom = bounds[1][1];\n\n\t\t\thomeGeoPoint = this.invert({ x: left + (right - left) / 2, y: top + (bottom - top) / 2 });\n\t\t}\n\n\t\tthis.zoomToGeoPoint(homeGeoPoint, homeZoomLevel, true, duration);\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (projection.invert) {\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tthis._centerLocation = projection.invert([this.innerWidth() / 2, this.innerHeight() / 2]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dispatchBounds) {\n\t\t\tthis._dispatchBounds = false;\n\t\t\tconst type = \"geoboundschanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyGeometries() {\n\t\tthis._dirtyGeometries = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.series.each((series) => {\n\t\t\tseries.markDirtyProjection();\n\t\t})\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(MapChartDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"map\"]);\n\n\t\tsuper._afterNew();\n\n\t\tthis._makeGeoPath();\n\n\t\tthis.chartContainer.children.push(this.seriesContainer);\n\n\t\tif (this.get(\"translateX\") == null) {\n\t\t\tthis.set(\"translateX\", this.width() / 2);\n\t\t}\n\t\tif (this.get(\"translateY\") == null) {\n\t\t\tthis.set(\"translateY\", this.height() / 2);\n\t\t}\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tthis.chartContainer.set(\"interactive\", true);\n\t\tthis.chartContainer.set(\"interactiveChildren\", false);\n\t\tthis.chartContainer.set(\"background\", Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"map\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleChartDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleChartUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handleChartMove(event);\n\t\t}));\n\n\t\tlet license = false;\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5M.{5,}/i)) {\n\t\t\t\tlicense = true;\n\t\t\t}\n\t\t}\n\t\tif (!license) {\n\t\t\tthis._root._showBranding();\n\t\t}\n\n\t}\n\n\tprotected _handleChartDown(event: ISpritePointerEvent) {\n\n\t\tthis._downZoomLevel = this.get(\"zoomLevel\", 1);\n\n\n\t\tlet count = $object.keys(this.chartContainer._downPoints).length;\n\t\tif (count > 0) {\n\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\tconst downId = this.chartContainer._getDownPointId();\n\t\t\tif (downId) {\n\t\t\t\tlet movePoint = this._movePoints[downId];\n\t\t\t\tif (movePoint) {\n\t\t\t\t\tthis.chartContainer._downPoints[downId] = movePoint;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count == 0) {\n\n\t\t\tlet bg = this.chartContainer.get(\"background\");\n\t\t\tif (bg) {\n\t\t\t\tbg.events.enableType(\"click\");\n\t\t\t}\n\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\t\tif (this._za) {\n\t\t\t\t\tthis._za.stop();\n\t\t\t\t}\n\t\t\t\tif (this._txa) {\n\t\t\t\t\tthis._txa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._tya) {\n\t\t\t\t\tthis._tya.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rxa) {\n\t\t\t\t\tthis._rxa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rya) {\n\t\t\t\t\tthis._rya.stop();\n\t\t\t\t}\n\n\t\t\t\tconst downPoint = this.chartContainer._display.toLocal(event.point);\n\t\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\t\tlet projection = this.get(\"projection\")!;\n\n\t\t\t\tif (projection.invert) {\n\t\t\t\t\tlet l0 = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\tlet l1 = projection.invert([downPoint.x + 1, downPoint.y + 1]);\n\t\t\t\t\tif (l0 && l1) {\n\t\t\t\t\t\tthis._pLon = Math.abs(l1[0] - l0[0]);\n\t\t\t\t\t\tthis._pLat = Math.abs(l1[1] - l0[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts screen coordinates (X and Y) within chart to latitude and\n\t * longitude.\n\t * \n\t * @param  point  Screen coordinates\n\t * @return        Geographical coordinates\n\t */\n\tpublic invert(point: IPoint): IGeoPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tif (projection.invert) {\n\t\t\tconst ll = projection.invert([point.x, point.y]);\n\t\t\tif (ll) {\n\t\t\t\treturn { longitude: ll[0], latitude: ll[1] };\n\t\t\t}\n\t\t}\n\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\t/**\n\t * Converts latitude/longitude to screen coordinates (X and Y).\n\t * \n\t * @param  point  Geographical coordinates\n\t * @return        Screen coordinates\n\t */\n\tpublic convert(point: IGeoPoint): IPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tconst xy = projection([point.longitude, point.latitude]);\n\n\t\tif (xy) {\n\t\t\treturn { x: xy[0], y: xy[1] };\n\t\t}\n\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\tprotected _handleChartUp(_event: ISpritePointerEvent) {\n\t\tthis.chartContainer._downPoints = {}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(chartContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst display = chartContainer._display;\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tdownPoint0 = display.toLocal(downPoint0);\n\t\t\t\tdownPoint1 = display.toLocal(downPoint1);\n\n\t\t\t\tmovePoint0 = display.toLocal(movePoint0);\n\t\t\t\tmovePoint1 = display.toLocal(movePoint1);\n\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\n\n\t\t\t\tlet level = currentDistance / initialDistance * this._downZoomLevel;\n\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\n\n\t\t\t\tlet tx = this._downTranslateX || 0;\n\t\t\t\tlet ty = this._downTranslateY || 0;\n\n\t\t\t\tlet zoomLevel = this._downZoomLevel;\n\n\t\t\t\tlet xx = moveCenter.x - (- tx + downCenter.x) / zoomLevel * level;\n\t\t\t\tlet yy = moveCenter.y - (- ty + downCenter.y) / zoomLevel * level;\n\n\t\t\t\tthis.set(\"zoomLevel\", level);\n\t\t\t\tthis.set(\"translateX\", xx);\n\t\t\t\tthis.set(\"translateY\", yy);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleChartMove(event: ISpritePointerEvent) {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet downPoint = chartContainer._getDownPoint();\n\t\tconst downPointId = chartContainer._getDownPointId();\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tconst pointerId = originalEvent.pointerId;\n\n\t\tif (this.get(\"pinchZoom\")) {\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(chartContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (downPointId && pointerId && pointerId != downPointId) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tif (downPoint) {\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\t\t\t\tif (panX != \"none\" || panY != \"none\") {\n\t\t\t\t\tconst display = chartContainer._display;\n\t\t\t\t\tlet local = display.toLocal(event.point);\n\t\t\t\t\tdownPoint = display.toLocal(downPoint);\n\n\t\t\t\t\tlet x = this._downTranslateX;\n\t\t\t\t\tlet y = this._downTranslateY;\n\n\t\t\t\t\tif (Math.hypot(downPoint.x - local.x, downPoint.y - local.y) > 5) {\n\t\t\t\t\t\tlet bg = chartContainer.get(\"background\");\n\t\t\t\t\t\tif (bg) {\n\t\t\t\t\t\t\tbg.events.disableType(\"click\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x) && $type.isNumber(y)) {\n\t\t\t\t\t\t\tlet projection = this.get(\"projection\")!;\n\t\t\t\t\t\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\t\t\t\t\t\tconst maxPanOut = this.get(\"maxPanOut\", 0.4);\n\t\t\t\t\t\t\tconst bounds = this._mapBounds;\n\t\t\t\t\t\t\tconst w = this.width();\n\t\t\t\t\t\t\tconst h = this.height();\n\n\t\t\t\t\t\t\tconst ww = bounds[1][0] - bounds[0][0];\n\t\t\t\t\t\t\tconst hh = bounds[1][1] - bounds[0][1];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (panX == \"translateX\") {\n\t\t\t\t\t\t\t\tx += local.x - downPoint.x;\n\n\t\t\t\t\t\t\t\tconst cx = w / 2 - (w / 2- this._centerX) * zoomLevel;\n\t\t\t\t\t\t\t\tx = Math.min(x, cx + ww * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\tx = Math.max(x, cx - ww * maxPanOut * zoomLevel);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (panY == \"translateY\") {\n\t\t\t\t\t\t\t\ty += local.y - downPoint.y;\n\t\t\t\t\t\t\t\tconst cy = h / 2 - (h / 2- this._centerY) * zoomLevel;\n\t\t\t\t\t\t\t\ty = Math.min(y, cy + hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\ty = Math.max(y, cy - hh * maxPanOut * zoomLevel);\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.set(\"translateX\", x);\n\t\t\t\t\t\t\tthis.set(\"translateY\", y);\n\n\t\t\t\t\t\t\tif (projection.invert) {\n\t\t\t\t\t\t\t\tlet downLocation = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\t\t\t\tif (location && downLocation) {\n\t\t\t\t\t\t\t\t\tif (panX == \"rotateX\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationX\", this._downRotationX! - (downPoint.x - local.x) * this._pLon);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (panY == \"rotateY\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationY\", this._downRotationY! + (downPoint.y - local.y) * this._pLat);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelRotateY(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rya = this.animate({ key: \"rotationY\", to: this.get(\"rotationY\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelRotateX(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rxa = this.animate({ key: \"rotationX\", to: this.get(\"rotationX\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\n\t\tlet step = this.get(\"zoomStep\", 2);\n\t\tlet zoomLevel = this.get(\"zoomLevel\", 1);\n\t\tlet newZoomLevel = zoomLevel;\n\t\tif (delta > 0) {\n\t\t\tnewZoomLevel = zoomLevel / step;\n\t\t}\n\t\telse if (delta < 0) {\n\t\t\tnewZoomLevel = zoomLevel * step;\n\t\t}\n\n\t\tif (newZoomLevel != zoomLevel) {\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\n\t\t}\n\t}\n\n\t/**\n\t * Zoom the map to geographical bounds.\n\t *\n\t * @param  geoBounds  Bounds\n\t * @param  duration   Animation duration in milliseconds\n\t */\n\tpublic zoomToGeoBounds(geoBounds: { left: number, right: number, top: number, bottom: number }, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\tlet p0 = this.convert({ longitude: geoBounds.left, latitude: geoBounds.top });\n\t\tlet p1 = this.convert({ longitude: geoBounds.right, latitude: geoBounds.bottom });\n\n\t\tif (p0.y < mapBounds[0][1]) {\n\t\t\tp0.y = mapBounds[0][1];\n\t\t}\n\n\t\tif (p1.y > mapBounds[1][1]) {\n\t\t\tp1.y = mapBounds[1][1];\n\t\t}\n\n\t\tlet zl = this.get(\"zoomLevel\", 1);\n\n\t\tlet bounds = { left: p0.x, right: p1.x, top: p0.y, bottom: p1.y };\n\n\t\tlet seriesContainer = this.seriesContainer;\n\n\t\tlet zoomLevel = .9 * Math.min(seriesContainer.innerWidth() / (bounds.right - bounds.left) * zl, seriesContainer.innerHeight() / (bounds.bottom - bounds.top) * zl);\n\t\tlet x = bounds.left + (bounds.right - bounds.left) / 2;\n\t\tlet y = bounds.top + (bounds.bottom - bounds.top) / 2;\n\n\t\tlet geoPoint = this.invert({ x, y });\n\n\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);\n\t}\n\n\t/**\n\t * Zooms the map to specific screen point.\n\t *\n\t * @param  point    Point\n\t * @param  level    Zoom level\n\t * @param  center   Center the map\n\t * @param  duration Duration of the animation in milliseconds\n\t */\n\tpublic zoomToPoint(point: IPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (level) {\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\t\t}\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t}\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tlet x = point.x;\n\t\tlet y = point.y;\n\n\t\tlet tx = this.get(\"translateX\", 0);\n\t\tlet ty = this.get(\"translateY\", 0);\n\n\t\tlet cx = x;\n\t\tlet cy = y;\n\n\t\tif (center) {\n\t\t\tcx = this.width() / 2;\n\t\t\tcy = this.height() / 2;\n\t\t}\n\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\n\n\t\tthis._txa = this.animate({ key: \"translateX\", to: xx, duration: duration, easing: easing });\n\t\tthis._tya = this.animate({ key: \"translateY\", to: yy, duration: duration, easing: easing });\n\t\tthis._za = this.animate({ key: \"zoomLevel\", to: level, duration: duration, easing: easing });\n\n\t\tif (zoomLevel != level) {\n\t\t\tthis._root.readerAlert(this._t(\"Zoom level changed to %1\", this._root.locale, $type.numberToString(level)));\n\t\t}\n\n\t\treturn this._za;\n\t}\n\n\t/**\n\t * Zooms the map to specific geographical point.\n\t *\n\t * @param  geoPoint  Point\n\t * @param  level     Zoom level\n\t * @param  center    Center the map\n\t * @param  duration  Duration of the animation in milliseconds\n\t */\n\tpublic zoomToGeoPoint(geoPoint: IGeoPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tconst xy = this.convert(geoPoint);\n\t\tif (xy) {\n\t\t\treturn this.zoomToPoint(xy, level, center, duration);\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the map in.\n\t */\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) * this.get(\"zoomStep\", 2));\n\t}\n\n\t/**\n\t * Zooms the map out.\n\t */\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) / this.get(\"zoomStep\", 2));\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._dirtyGeometries = false;\n\t\tthis._mapFitted = false;\n\t}\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import type { IMapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\nimport type { IMapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { MapLine } from \"./MapLine\";\nimport type { MapPolygon } from \"./MapPolygon\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IMapPointSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPointSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * GeoJSON geometry of the point.\n\t */\n\tgeometry?: GeoJSON.Point | GeoJSON.MultiPoint;\n\n\t/**\n\t * Longitude.\n\t */\n\tlongitude?: number;\n\n\t/**\n\t * Latitude.\n\t */\n\tlatitude?: number;\n\n\t/**\n\t * Relative position (0-1) on the [[MapLine]] to place point on.\n\t */\n\tpositionOnLine?: number;\n\n\t/**\n\t * Automatically rotate the point bullet to face the direction of the line\n\t * it is attached to.\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * The angle will be added to the automatically-calculated angle.\n\t *\n\t * Can be used to reverse the direction.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * A data item from a [[MapLineSeries]] the point is attached to.\n\t */\n\tlineDataItem?: DataItem<IMapLineSeriesDataItem>;\n\n\t/**\n\t * An ID of a [[MapLine]] the point is attached to.\n\t */\n\tlineId?: string;\n\n\t/**\n\t * A data item from a [[MapPolygonSeries]] to use for positioning of the\n\t * point.\n\t */\n\tpolygonDataItem?: DataItem<IMapPolygonSeriesDataItem>;\n\n\t/**\n\t * An ID of the [[MapPolygon]] to use for centering the point.\n\t */\n\tpolygonId?: string;\n}\n\nexport interface IMapPointSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * A field in data that holds an ID of the related polygon.\n\t *\n\t * If set, the point will be positioned in the visual center of the target\n\t * polygon.\n\t */\n\tpolygonIdField?: string;\n\n\t/**\n\t * If set to `true` will hide all points that are in the visible range of\n\t * the map.\n\t */\n\tclipFront?: boolean;\n\n\t/**\n\t * If set to `true` will hide all points that are in the invisible range of\n\t * the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t *\n\t * @default true\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlatitudeField?: string;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlongitudeField?: string;\n\n};\n\n/**\n * Creates a map series for displaying markers on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\n * @important\n */\nexport class MapPointSeries extends MapSeries {\n\n\tpublic static className: string = \"MapPointSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPointSeries.className]);\n\n\tdeclare public _settings: IMapPointSeriesSettings;\n\tdeclare public _privateSettings: IMapPointSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPointSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Point\", \"MultiPoint\"];\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\n\t\tif (dataItem) {\n\t\t\tthis._positionBullets(dataItem);\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tconst geometry = dataItem.get(\"geometry\");\n\t\tif (!geometry) {\n\t\t\tdataItem.set(\"geometry\", { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] });\n\t\t}\n\t\telse {\n\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates && coordinates[0]) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0][0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[0][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.bullets = [];\n\n\t\tthis.bullets.each((bulletFunction) => {\n\t\t\tconst geometry = dataItem.get(\"geometry\");\n\n\t\t\tif (geometry) {\n\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\tthis._makeBullet(dataItem, bulletFunction);\n\t\t\t\t}\n\t\t\t\telse if (geometry.type = \"MultiPoint\") {\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t$array.each(geometry.coordinates, () => {\n\t\t\t\t\t\tthis._makeBullet(dataItem, bulletFunction, i);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst latitude = dataItem.get(\"latitude\");\n\t\t\tconst longitude = dataItem.get(\"longitude\");\n\t\t\tconst lineDataItem = dataItem.get(\"lineDataItem\");\n\t\t\tconst chart = this.chart;\n\t\t\tlet line: MapLine | undefined;\n\t\t\tif (lineDataItem) {\n\t\t\t\tline = lineDataItem.get(\"mapLine\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst lineId = dataItem.get(\"lineId\");\n\n\t\t\t\tif (lineId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t\t\tlet lineDI = series.getDataItemById(lineId);\n\t\t\t\t\t\t\tif (lineDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"lineDataItem\", lineDI);\n\t\t\t\t\t\t\t\tline = lineDI.get(\"mapLine\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tconst polygonDataItem = dataItem.get(\"polygonDataItem\");\n\t\t\tlet polygon: MapPolygon | undefined;\n\t\t\tif (polygonDataItem) {\n\t\t\t\tpolygon = polygonDataItem.get(\"mapPolygon\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst polygonId = dataItem.get(\"polygonId\");\n\n\t\t\t\tif (polygonId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapPolygonSeries>(\"MapPolygonSeries\")) {\n\t\t\t\t\t\t\tlet polygonDI = series.getDataItemById(polygonId);\n\t\t\t\t\t\t\tif (polygonDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"polygonDataItem\", polygonDI);\n\t\t\t\t\t\t\t\tpolygon = polygonDI.get(\"mapPolygon\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst positionOnLine = dataItem.get(\"positionOnLine\");\n\t\t\tlet coordinates: [number, number] | undefined;\n\n\t\t\tlet angle: number | undefined;\n\n\t\t\tif (polygon) {\n\t\t\t\tlet geoPoint = polygon.visualCentroid();\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\t\t\t}\n\t\t\telse if (line && $type.isNumber(positionOnLine)) {\n\t\t\t\tlet geoPoint = line.positionToGeoPoint(positionOnLine);\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\n\t\t\t\tif (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\n\t\t\t\t\tconst geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\n\t\t\t\t\tconst geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\n\n\t\t\t\t\tconst point0 = chart.convert(geoPoint0);\n\t\t\t\t\tconst point1 = chart.convert(geoPoint1);\n\n\t\t\t\t\t//dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\n\t\t\t\t\tangle = $math.getAngle(point0, point1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($type.isNumber(longitude) && $type.isNumber(latitude)) {\n\t\t\t\tcoordinates = [longitude, latitude];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst geometry = dataItem.get(\"geometry\")!;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\t\tthis._positionBulletReal(bullet, geometry, geometry.coordinates as [number, number], angle);\n\t\t\t\t\t}\n\t\t\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\t\t\tlet index = bullet._index || 0;\n\t\t\t\t\t\tcoordinates = geometry.coordinates[index] as [number, number];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (coordinates) {\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _positionBulletReal(bullet: Bullet, geometry: GeoJSON.Geometry, coordinates: [number, number], angle?: number) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst projection = chart.get(\"projection\")!;\n\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\tconst dataItem: DataItem<IMapPointSeriesDataItem> = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\n\t\t\tconst xy = projection(coordinates as any);\n\n\t\t\tif (xy) {\n\t\t\t\tsprite.setAll({ x: xy[0], y: xy[1] });\n\t\t\t}\n\n\t\t\tlet visible = true;\n\t\t\tif (geoPath(geometry)) {\n\t\t\t\tif (this.get(\"clipFront\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.get(\"clipBack\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsprite.setPrivate(\"visible\", visible);\n\n\t\t\tif (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\n\t\t\t\tsprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers the map to specific series' data item and zooms to the level\n\t * specified in the parameters.\n\t *\n\t * @param  dataItem   Map point\n\t * @param  zoomLevel  Zoom level\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPointSeriesDataItem>, zoomLevel: number): Animation<any> | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.zoomToGeoPoint({ longitude: dataItem.get(\"longitude\", 0), latitude: dataItem.get(\"latitude\", 0) }, zoomLevel, true);\n\t\t}\n\t}\n\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $mapUtils from \"./MapUtils\";\nimport $polylabel from \"polylabel\";\nimport { geoArea } from \"d3-geo\";\n\nexport interface IMapPolygonSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.MultiPolygon | GeoJSON.Polygon;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n\n}\n\nexport interface IMapPolygonPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A polygon in a [[MapPolygonSeries]].\n */\nexport class MapPolygon extends Graphics {\n\n\tdeclare public _settings: IMapPolygonSettings;\n\tdeclare public _privateSettings: IMapPolygonPrivate;\n\n\tpublic static className: string = \"MapPolygon\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapPolygon.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\t/**\n\t * A [[MapPolygonSeries]] polygon belongs to.\n\t */\n\tpublic series: MapPolygonSeries | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.series;\n\t\t\t\tif (series) {\n\t\t\t\t\tconst projection = series.projection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geoPath = series.geoPath();\n\n\t\t\t\t\tif (geoPath) {\n\t\t\t\t\t\tthis._clear = true;\n\n\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\tgeoPath.context(null);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (this.isHover()) {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the geometrical center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic geoCentroid(): IGeoPoint {\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tif (geometry) {\n\t\t\treturn $mapUtils.getGeoCentroid(geometry);\n\t\t}\n\t\telse {\n\t\t\treturn { latitude: 0, longitude: 0 };\n\t\t}\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the visual center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic visualCentroid(): IGeoPoint {\n\n\t\tlet biggestArea = 0;\n\t\tlet coordinates: number[][][] = [];\n\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (geometry.type == \"Polygon\") {\n\t\t\t\tcoordinates = geometry.coordinates as number[][][];\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPolygon\") {\n\t\t\t\tfor (let i = 0; i < geometry.coordinates.length; i++) {\n\t\t\t\t\tlet coords = geometry.coordinates[i] as number[][][];\n\t\t\t\t\tlet area = geoArea({ type: \"Polygon\", coordinates: coords });\n\t\t\t\t\tif (area > biggestArea) {\n\t\t\t\t\t\tcoordinates = coords;\n\t\t\t\t\t\tbiggestArea = area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet center = $polylabel(coordinates as number[][][]);\n\t\t\treturn { longitude: center[0], latitude: center[1] };\n\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst series = this.series;\n\n\t\tif (series) {\n\t\t\tconst projection = series.projection();\n\t\t\tif (projection) {\n\t\t\t\tconst geoPoint = this.visualCentroid();\n\t\t\t\tconst xy = projection([geoPoint.longitude, geoPoint.latitude]);\n\n\t\t\t\tif (xy) {\n\t\t\t\t\treturn { x: xy[0], y: xy[1] }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapPolygon } from \"./MapPolygon\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $mapUtils from \"./MapUtils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IMapPolygonSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPolygonSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapPolygon]] object.\n\t */\n\tmapPolygon: MapPolygon;\n\n\t/**\n\t * GeoJSON geometry of the polygon.\n\t */\n\tgeometry?: GeoJSON.Polygon | GeoJSON.MultiPolygon;\n\n}\n\nexport interface IMapPolygonSeriesSettings extends IMapSeriesSettings {\n\n}\n\n/**\n * Creates a map series for displaying polygons.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/} for more info\n * @important\n */\nexport class MapPolygonSeries extends MapSeries {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapPolygon(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapPolygon {\n\t\tconst mapPolygon = this.children.push(this.mapPolygons.make());\n\t\tmapPolygon._setDataItem(dataItem);\n\t\tthis.mapPolygons.push(mapPolygon);\n\t\treturn mapPolygon;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all polygons in series.\n\t *\n\t * `mapPolygons.template` can also be used to configure polygons.\n\t *\n\t * @default new ListTemplate<MapPolygon>\n\t */\n\tpublic readonly mapPolygons: ListTemplate<MapPolygon> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapPolygon._new(this._root, {}, [this.mapPolygons.template])\n\t);\n\n\tpublic static className: string = \"MapPolygonSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPolygonSeries.className]);\n\n\tdeclare public _settings: IMapPolygonSeriesSettings;\n\tdeclare public _privateSettings: IMapPolygonSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPolygonSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Polygon\", \"MultiPolygon\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.mapPolygons.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapPolygons.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (!mapPolygon) {\n\t\t\tmapPolygon = this.makeMapPolygon(dataItem);\n\t\t}\n\n\t\tdataItem.set(\"mapPolygon\", mapPolygon);\n\t\tconst geometry = dataItem.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tmapPolygon.set(\"geometry\", geometry);\n\t\t}\n\n\t\tmapPolygon.series = this;\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tthis.mapPolygons.removeValue(mapPolygon);\n\t\t\tmapPolygon.dispose();\n\t\t}\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t}\n\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers and zooms in on the specific polygon.\n\t *\n\t * @param  dataItem  Target data item\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zooming_to_clicked_object} for more info\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPolygonSeriesDataItem>):Animation<any> | undefined {\n\t\tconst polygon = dataItem.get(\"mapPolygon\");\n\t\tif (polygon) {\n\t\t\tconst geometry = polygon.get(\"geometry\");\n\t\t\tconst chart = this.chart;\n\t\t\tif (geometry && chart) {\n\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry));\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { MapChart } from \"./MapChart\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { MultiDisposer } from \"../../core/util/Disposer\";\n\nexport interface IZoomControlSettings extends IContainerSettings {\n\n}\n\nexport interface IZoomControlPrivate extends IContainerPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: MapChart;\n\n}\n\n/**\n * A control that displays button for zooming [[MapChart]] in and out.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control} for more information\n * @important\n */\nexport class ZoomControl extends Container {\n\n\t/**\n\t * A [[Button]] for zoom in.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly plusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"plus\"] }));\n\n\t/**\n\t * A [[Button]] for zoom out.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly minusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"minus\"] }));\n\n\tdeclare public _settings: IZoomControlSettings;\n\tdeclare public _privateSettings: IZoomControlPrivate;\n\n\tpublic static className: string = \"ZoomControl\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomControl.className]);\n\n\tprotected _disposer: MultiDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"position\", \"absolute\");\n\n\t\tthis.set(\"layout\", this._root.verticalLayout);\n\t\tthis.set(\"x\", p100);\n\t\tthis.set(\"centerX\", p100);\n\n\t\tthis.set(\"y\", p100);\n\t\tthis.set(\"centerY\", p100);\n\n\t\tthis.set(\"paddingRight\", 10);\n\t\tthis.set(\"paddingBottom\", 10);\n\n\t\tthis.plusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\n\t\tthis.minusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"chart\")) {\n\t\t\tconst chart = this.getPrivate(\"chart\");\n\t\t\tconst previous = this._prevPrivateSettings.chart;\n\t\t\tif (chart) {\n\t\t\t\tthis._disposer = new MultiDisposer([\n\t\t\t\t\tthis.plusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomIn()\n\t\t\t\t\t}),\n\t\t\t\t\tthis.minusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomOut()\n\t\t\t\t\t})])\n\t\t\t}\n\n\t\t\tif (previous && this._disposer) {\n\t\t\t\tthis._disposer.dispose();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import * as m from \"./../../dist/es2015/map.js\";\nexport const am5map = m;"],"names":["this","fields","push","_setRawDefault","on","geoJSON","previous","_prevSettings","data","clear","_afterNew","_prepareChildren","_valuesDirty","isDirty","get","undefined","_geoJSONparsed","_parseGeoJSON","id","includes","excludes","length","indexOf","features","type","geometry","console","log","geodataNames","i","len","feature","properties","name","_types","checkInclude","dataItem","dataItems","value","dataObject","dataContext","geometryType","set","processDataItem","madeFromGeoData","events","isEnabled","dispatch","target","_chart","children","moveValue","bulletsContainer","chart","getPrivate","_geometries","markDirtyGeometries","_dispose","series","removeValue","Series","MapSeries","className","Adder","constructor","_partials","Float64Array","_n","add","x","p","j","y","hi","lo","Math","abs","valueOf","n","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","ceil","exp","hypot","floor","pow","sin","sign","sqrt","tan","asin","haversin","noop","streamGeometry","stream","streamGeometryType","hasOwnProperty","lengthSum","lambda0","sinPhi0","cosPhi0","streamObjectType","Feature","object","FeatureCollection","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","lengthStream","lengthPointFirst","lengthLineEnd","lambda","phi","lengthPoint","sinPhi","cosPhi","delta","cosDelta","z","a","b","_beforeChanged","_projectionDirty","clipAngle","precision","_clear","_display","context","markDirty","_clearDirty","position","totalDistance","currentDistance","positionA","positionB","pointA","pointB","segments","s","segment","positionAB","x0","y0","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d","k","interpolate","t","B","A","distance","longitude","latitude","Graphics","MapLine","List","Template","_root","mapLines","template","mapLine","make","_setDataItem","markDirtyProjection","makeMapLine","pointsToConnect","markDirtyValues","setPrivate","coords","setRaw","disposeDataItem","dispose","classNames","concat","MapLineSeries","range","start","stop","step","arguments","max","Array","graticuleX","dy","map","graticuleY","dx","makeDataItem","_dataItem","_generate","_updateChildren","graticule","X1","X0","Y1","Y0","X","Y","DX","DY","lines","filter","outline","slice","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","GraticuleSeries","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","line","m","rejoin","pop","shift","result","Intersection","points","other","entry","o","e","v","compareIntersection","startInside","subject","clip","forEach","p0","p1","pointEqual","sort","current","isSubject","array","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","merge","arrays","from","flatten","pointVisible","clipLine","sink","polygon","ring","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","normal","angle","winding","sum","point0","phi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","pointLine","clean","ringSegments","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","circleRadius","acos","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","u","w","uu","t2","q","polar","q1","code","r","c0","v0","v00","point2","c","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","min","ax","ay","transformer","methods","TransformStream","key","prototype","Infinity","boundsStream","bounds","fit","projection","fitBounds","clipExtent","scale","translate","fitExtent","h","fitSize","size","fitWidth","width","fitHeight","height","cosMinDistance","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","identity","recenter","center","apply","resample","reset","transformRotate","reflectX","reflectY","mercatorRaw","reclip","forward","mercatorProjection","setupDefaultRules","rule","ic","interfaceColors","bind","setAll","panX","panY","pinchZoom","zoomStep","zoomLevel","rotationX","rotationY","rotationZ","maxZoomLevel","minZoomLevel","wheelY","wheelX","animationEasing","wheelEasing","wheelDuration","wheelSensitivity","maxPanOut","role","clipFront","clipBack","isMeasured","fillOpacity","strokeWidth","strokeOpacity","draw","display","moveTo","lineTo","Theme","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","Z0","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","closePath","lengthRing","PathString","_string","_circle","join","W0","W1","phi00","z0","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","deltaSum","ranges","areaRing","dLambda","sdLambda","adLambda","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","inflection","phii","lambdai","rangeCompare","rangeContains","getGeoCircle","geoPoint","constant","circle","getGeoCentroid","getGeoBounds","merged","deltaMax","left","right","top","bottom","getGeoRectangle","north","east","south","west","multiPolygon","stepLong","stepLat","ln","surface","ll","lt","normalizeGeoPoint","wrapAngleTo180","latitude180","path","projectionStream","contextStream","measure","setPrivateRaw","_geoCentroid","_geoBounds","chartContainer","_wheelDp","event","wheelEvent","originalEvent","preventDefault","toLocal","_handleWheelZoom","deltaY","_handleWheelRotateY","_handleWheelRotateX","deltaX","_disposers","innerWidth","innerHeight","_makeGeoPath","_fitMap","prev","hw","hh","centerLocation","xy","xx","yy","_handleSetWheel","previousGeometries","_geometryColection","_dirtyGeometries","each","_pw","_ph","newScale","_centerLocation","zoomControl","_disposeProperty","_centerX","_centerY","_mapBounds","prevGeoBounds","_prevGeoBounds","_dispatchBounds","_mapFitted","duration","homeGeoPoint","homeZoomLevel","zoomToGeoPoint","_afterChanged","_defaultThemes","MapChartDefaultTheme","_settings","themeTags","seriesContainer","Rectangle","fill","Color","_handleChartDown","_handleChartUp","_handleChartMove","license","match","_showBranding","_downZoomLevel","count","_downPoints","_downTranslateX","_downTranslateY","_downRotationX","_downRotationY","_downRotationZ","downId","_getDownPointId","movePoint","_movePoints","bg","enableType","_za","_txa","_tya","_rxa","_rya","downPoint","l0","l1","_pLon","_pLat","_event","downPoints","movePoints","downPoint0","downPoint1","movePoint0","movePoint1","initialDistance","level","moveCenter","downCenter","tx","ty","_getDownPoint","downPointId","pointerId","_handlePinch","local","disableType","ww","downLocation","location","easing","animate","newZoomLevel","zoomToPoint","geoBounds","mapBounds","convert","zl","readerAlert","_t","locale","SerialChart","MapChart","_positionBullets","bullets","bulletFunction","_makeBullet","bullet","sprite","lineDataItem","isType","lineDI","getDataItemById","polygonDataItem","polygonDI","positionOnLine","visualCentroid","positionToGeoPoint","geoPoint0","geoPoint1","_positionBulletReal","index","_index","geoPath","MapPointSeries","isHover","showTooltip","biggestArea","MapPolygon","mapPolygons","mapPolygon","makeMapPolygon","_addGeometry","_removeGeometry","zoomToGeoBounds","MapPolygonSeries","Button","verticalLayout","plusButton","icon","layout","minusButton","isPrivateDirty","_prevPrivateSettings","_disposer","zoomIn","zoomOut","Container","ZoomControl","orthographicRaw","equirectangularRaw","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","parallels","conicProjection","lower48Point","alaskaPoint","hawaiiPoint","lower48","conicEqualArea","alaska","hawaii","pointStream","albersUsa","streams","sc","cc","azimuthalInvert","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","naturalEarth1Raw","phi4","Queue","polylabel","debug","minX","minY","maxX","maxY","cellSize","degeneratePoleOfInaccessibility","cellQueue","compareMax","Cell","bestCell","f","getCentroidCell","bboxCell","numProbes","cell","poleOfInaccessibility","inside","minDistSq","getSegDistSq","pointToPolygonDist","SQRT2","px","py","default","module","exports","TinyQueue","compare","defaultCompare","_down","item","_up","peek","pos","parent","halfLength","best","am5map"],"sourceRoot":""}